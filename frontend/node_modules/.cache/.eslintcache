[{"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\index.js":"1","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\App.js":"2","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\script.js":"3","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Maps.js":"4","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Collection.js":"5","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Home.js":"6","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TweetList.js":"7","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TimeLines.js":"8","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Dbs.js":"9","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\WordCloud.js":"10","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\LoadingData.js":"11","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\SentimentCharts.js":"12","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\preloader.js":"13","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\TimeLinesFilters.js":"14","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\Filters.js":"15","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\WordChartFilters.js":"16","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TweetsTable.js":"17","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\TimeLineChart.js":"18","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\BarChart.js":"19","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\PieChart.js":"20","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\MultiTimeLineChart.js":"21","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SentimentFilters.js":"22","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\EmotionBarChart.js":"23","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\RadarChart.js":"24","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchFilters.js":"25","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchHashtag.js":"26","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchText.js":"27","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\index.jsx":"28","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\hooks\\useTable.js":"29","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TableFooter\\index.jsx":"30","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchUser.js":"31","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\HeatmapLayer.js":"32"},{"size":211,"mtime":1646663231563,"results":"33","hashOfConfig":"34"},{"size":13258,"mtime":1646844574070,"results":"35","hashOfConfig":"34"},{"size":10081,"mtime":1643644658000,"results":"36","hashOfConfig":"34"},{"size":6230,"mtime":1646844235115,"results":"37","hashOfConfig":"34"},{"size":751,"mtime":1644683207272,"results":"38","hashOfConfig":"34"},{"size":2091,"mtime":1645398763875,"results":"39","hashOfConfig":"34"},{"size":2088,"mtime":1644926752448,"results":"40","hashOfConfig":"34"},{"size":3155,"mtime":1644927661484,"results":"41","hashOfConfig":"34"},{"size":731,"mtime":1644683209536,"results":"42","hashOfConfig":"34"},{"size":8010,"mtime":1646844865558,"results":"43","hashOfConfig":"34"},{"size":4071,"mtime":1646836598354,"results":"44","hashOfConfig":"34"},{"size":5125,"mtime":1645320279693,"results":"45","hashOfConfig":"34"},{"size":784,"mtime":1643644656000,"results":"46","hashOfConfig":"34"},{"size":25924,"mtime":1645556598973,"results":"47","hashOfConfig":"34"},{"size":25519,"mtime":1645556615716,"results":"48","hashOfConfig":"34"},{"size":27408,"mtime":1646776047882,"results":"49","hashOfConfig":"34"},{"size":2279,"mtime":1643644656000,"results":"50","hashOfConfig":"34"},{"size":758,"mtime":1643644656000,"results":"51","hashOfConfig":"34"},{"size":967,"mtime":1643644656000,"results":"52","hashOfConfig":"34"},{"size":1601,"mtime":1644967483933,"results":"53","hashOfConfig":"34"},{"size":1332,"mtime":1645453488271,"results":"54","hashOfConfig":"34"},{"size":28462,"mtime":1646250579812,"results":"55","hashOfConfig":"34"},{"size":1116,"mtime":1645314137852,"results":"56","hashOfConfig":"34"},{"size":932,"mtime":1645314137856,"results":"57","hashOfConfig":"34"},{"size":2231,"mtime":1646250532790,"results":"58","hashOfConfig":"34"},{"size":2237,"mtime":1645554098884,"results":"59","hashOfConfig":"34"},{"size":2236,"mtime":1646608031395,"results":"60","hashOfConfig":"34"},{"size":1583,"mtime":1644928301985,"results":"61","hashOfConfig":"34"},{"size":849,"mtime":1643644656000,"results":"62","hashOfConfig":"34"},{"size":1074,"mtime":1643644656000,"results":"63","hashOfConfig":"34"},{"size":1957,"mtime":1645556623731,"results":"64","hashOfConfig":"34"},{"size":11196,"mtime":1646314524352,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"tjoxod",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"68"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"68"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\index.js",[],["154","155"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\App.js",["156","157","158","159"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\script.js",["160","161","162","163"],"\r\n\r\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n  (function () {\r\n    var sidebar = document.querySelector('.sidebar'),\r\n        catSubMenu = document.querySelector('.cat-sub-menu'),\r\n        sidebarBtns = document.querySelectorAll('.sidebar-toggle');\r\n\r\n    var _iterator = _createForOfIteratorHelper(sidebarBtns),\r\n        _step;\r\n\r\n    try {\r\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n        var sidebarBtn = _step.value;\r\n\r\n        if (sidebarBtn && catSubMenu && sidebarBtn) {\r\n          sidebarBtn.addEventListener('click', function () {\r\n            var _iterator2 = _createForOfIteratorHelper(sidebarBtns),\r\n                _step2;\r\n\r\n            try {\r\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\r\n                var sdbrBtn = _step2.value;\r\n                sdbrBtn.classList.toggle('rotated');\r\n              }\r\n            } catch (err) {\r\n              _iterator2.e(err);\r\n            } finally {\r\n              _iterator2.f();\r\n            }\r\n\r\n            sidebar.classList.toggle('hidden');\r\n            catSubMenu.classList.remove('visible');\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      _iterator.e(err);\r\n    } finally {\r\n      _iterator.f();\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var showCatBtns = document.querySelectorAll('.show-cat-btn');\r\n\r\n    if (showCatBtns) {\r\n      showCatBtns.forEach(function (showCatBtn) {\r\n        var catSubMenu = showCatBtn.nextElementSibling;\r\n        showCatBtn.addEventListener('click', function (e) {\r\n          e.preventDefault();\r\n          catSubMenu.classList.toggle('visible');\r\n          var catBtnToRotate = document.querySelector('.category__btn');\r\n          catBtnToRotate.classList.toggle('rotated');\r\n        });\r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var showMenu = document.querySelector('.lang-switcher');\r\n    var langMenu = document.querySelector('.lang-menu');\r\n    var layer = document.querySelector('.layer');\r\n\r\n    if (showMenu) {\r\n      showMenu.addEventListener('click', function () {\r\n        langMenu.classList.add('active');\r\n        layer.classList.add('active');\r\n      });\r\n\r\n      if (layer) {\r\n        layer.addEventListener('click', function (e) {\r\n          if (langMenu.classList.contains('active')) {\r\n            langMenu.classList.remove('active');\r\n            layer.classList.remove('active');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var userDdBtnList = document.querySelectorAll('.dropdown-btn');\r\n    var userDdList = document.querySelectorAll('.users-item-dropdown');\r\n    var layer = document.querySelector('.layer');\r\n\r\n    if (userDdList && userDdBtnList) {\r\n      var _iterator3 = _createForOfIteratorHelper(userDdBtnList),\r\n          _step3;\r\n\r\n      try {\r\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\r\n          var userDdBtn = _step3.value;\r\n          userDdBtn.addEventListener('click', function (e) {\r\n            layer.classList.add('active');\r\n\r\n            var _iterator4 = _createForOfIteratorHelper(userDdList),\r\n                _step4;\r\n\r\n            try {\r\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\r\n                var userDd = _step4.value;\r\n\r\n                if (e.currentTarget.nextElementSibling == userDd) {\r\n                  if (userDd.classList.contains('active')) {\r\n                    userDd.classList.remove('active');\r\n                  } else {\r\n                    userDd.classList.add('active');\r\n                  }\r\n                } else {\r\n                  userDd.classList.remove('active');\r\n                }\r\n              }\r\n            } catch (err) {\r\n              _iterator4.e(err);\r\n            } finally {\r\n              _iterator4.f();\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        _iterator3.e(err);\r\n      } finally {\r\n        _iterator3.f();\r\n      }\r\n    }\r\n\r\n    if (layer) {\r\n      layer.addEventListener('click', function (e) {\r\n        var _iterator5 = _createForOfIteratorHelper(userDdList),\r\n            _step5;\r\n\r\n        try {\r\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\r\n            var userDd = _step5.value;\r\n\r\n            if (userDd.classList.contains('active')) {\r\n              userDd.classList.remove('active');\r\n              layer.classList.remove('active');\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator5.e(err);\r\n        } finally {\r\n          _iterator5.f();\r\n        }\r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    //Chart.defaults.backgroundColor = '#000';\r\n    var darkMode = localStorage.getItem('darkMode');\r\n    var darkModeToggle = document.querySelector('.theme-switcher');\r\n\r\n    var enableDarkMode = function enableDarkMode() {\r\n      document.body.classList.add('darkmode');\r\n      localStorage.setItem('darkMode', 'enabled');\r\n    };\r\n\r\n    var disableDarkMode = function disableDarkMode() {\r\n      document.body.classList.remove('darkmode');\r\n      localStorage.setItem('darkMode', null);\r\n    };\r\n\r\n    if (darkMode === 'enabled') {\r\n      enableDarkMode();\r\n    }\r\n\r\n    if (darkModeToggle) {\r\n      darkModeToggle.addEventListener('click', function () {\r\n        darkMode = localStorage.getItem('darkMode');\r\n\r\n        if (darkMode !== 'enabled') {\r\n          enableDarkMode();\r\n        } else {\r\n          disableDarkMode();\r\n        }\r\n\r\n      \r\n      });\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var checkAll = document.querySelector('.check-all');\r\n    var checkers = document.querySelectorAll('.check');\r\n\r\n    if (checkAll && checkers) {\r\n      checkAll.addEventListener('change', function (e) {\r\n        var _iterator6 = _createForOfIteratorHelper(checkers),\r\n            _step6;\r\n\r\n        try {\r\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\r\n            var checker = _step6.value;\r\n\r\n            if (checkAll.checked) {\r\n              checker.checked = true;\r\n              checker.parentElement.parentElement.parentElement.classList.add('active');\r\n            } else {\r\n              checker.checked = false;\r\n              checker.parentElement.parentElement.parentElement.classList.remove('active');\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator6.e(err);\r\n        } finally {\r\n          _iterator6.f();\r\n        }\r\n      });\r\n\r\n      var _iterator7 = _createForOfIteratorHelper(checkers),\r\n          _step7;\r\n\r\n      try {\r\n        var _loop = function _loop() {\r\n          var checker = _step7.value;\r\n          checker.addEventListener('change', function (e) {\r\n            checker.parentElement.parentElement.parentElement.classList.toggle('active');\r\n\r\n            if (!checker.checked) {\r\n              checkAll.checked = false;\r\n            }\r\n\r\n            var totalCheckbox = document.querySelectorAll('.users-table .check');\r\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n\r\n            if (totalCheckbox && totalChecked) {\r\n              if (totalCheckbox.length == totalChecked.length) {\r\n                checkAll.checked = true;\r\n              } else {\r\n                checkAll.checked = false;\r\n              }\r\n            }\r\n          });\r\n        };\r\n\r\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\r\n          _loop();\r\n        }\r\n      } catch (err) {\r\n        _iterator7.e(err);\r\n      } finally {\r\n        _iterator7.f();\r\n      }\r\n    }\r\n  })();\r\n\r\n  (function () {\r\n    var checkAll = document.querySelector('.check-all');\r\n    var checkers = document.querySelectorAll('.check');\r\n    var checkedSum = document.querySelector('.checked-sum');\r\n\r\n    if (checkedSum && checkAll && checkers) {\r\n      checkAll.addEventListener('change', function (e) {\r\n        var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n        checkedSum.textContent = totalChecked.length;\r\n      });\r\n\r\n      var _iterator8 = _createForOfIteratorHelper(checkers),\r\n          _step8;\r\n\r\n      try {\r\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\r\n          var checker = _step8.value;\r\n          checker.addEventListener('change', function (e) {\r\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\r\n            checkedSum.textContent = totalChecked.length;\r\n          });\r\n        }\r\n      } catch (err) {\r\n        _iterator8.e(err);\r\n      } finally {\r\n        _iterator8.f();\r\n      }\r\n    }\r\n  })();\r\n\r\n});","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Maps.js",["164","165","166","167","168","169","170"],"import Filters from './Filters/Filters'\r\nimport React from 'react';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport PreLoader from \"./preloader\";\r\nimport HeatmapLayer from '../HeatmapLayer';\r\n\r\nimport citta from \"../it.json\" \r\n\r\n \r\n\r\n\r\nclass Maps extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    \r\n\r\n    this.state = {\r\n      data:[],\r\n      markers : [],\r\n      flag:0,\r\n      heatPoints:[],\r\n      content:0,\r\n      counter:0,\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      this.setState({flag:0})\r\n    }\r\n    \r\n  }\r\n\r\n  handleQuery = (data) => {\r\n    \r\n    this.setState({data:data})\r\n    this.state.data = data\r\n    this.query()\r\n    this.setState({flag:1})\r\n  \r\n  }\r\n\r\n      query = () => {\r\n        var i = 0;\r\n        var j =0;\r\n        var markers = [];\r\n        var heatPoints = [];\r\n        var flag=false;\r\n        this.state.counter=0;\r\n        \r\n        while(i<this.state.data.length){\r\n          if(this.state.data[i].geo!==undefined){\r\n            \r\n            this.state.counter++;\r\n\r\n            if(this.state.data[i].geo.coordinates!==undefined){\r\n\r\n              markers.push({\r\n                lat:this.state.data[i].geo.coordinates.latitude,\r\n                lng:this.state.data[i].geo.coordinates.longitude,\r\n                text:this.state.data[i].raw_text,\r\n                author:this.state.data[i].author_username\r\n              })\r\n\r\n              heatPoints.push([this.state.data[i].geo.coordinates.latitude,this.state.data[i].geo.coordinates.longitude,100]);\r\n             \r\n            }else{\r\n\r\n              \r\n              j=0;\r\n              flag=false;\r\n              //Get coordinates from city name\r\n              //Tollegno is the last city of the file \"it.json\"\r\n              while(citta[j].city!=='Tollegno'){\r\n                if(citta[j].city === this.state.data[i].geo.user_location){\r\n                  flag=true;\r\n                  break;\r\n                }\r\n                j++;\r\n              }\r\n              \r\n              if(flag===true){\r\n                markers.push({\r\n                  lat:citta[j].lat,\r\n                  lng:citta[j].lng,\r\n                  text:this.state.data[i].raw_text,\r\n                  author:this.state.data[i].author_username\r\n                })\r\n  \r\n                heatPoints.push([citta[j].lat,citta[j].lng,100]);\r\n              }\r\n\r\n   \r\n\r\n            }\r\n            \r\n            i++\r\n          }else{\r\n            i++\r\n          }\r\n        }\r\n        \r\n        this.setState({markers:markers})\r\n        this.state.markers=markers\r\n        this.setState({heatPoints:heatPoints});\r\n        this.state.heatPoints=heatPoints;\r\n\r\n      \r\n        \r\n        \r\n        \r\n      }\r\n\r\n    displayMap = () =>{\r\n      this.state.content=0;\r\n      this.setState({content:0});\r\n    }\r\n\r\n    displayHeatMap = () =>{\r\n      this.state.content=1;\r\n      this.setState({content:1});\r\n    }\r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n\r\n          if(this.state.content===0){\r\n            body=\r\n            <>\r\n \r\n \r\n            \r\n            <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"chart\" id=\"mapCanvas\">\r\n              <Map center={[41.29246 ,13.5736108]} zoom={5} scrollWheelZoom={false}>\r\n              {this.state.markers.map((city, idx) => (\r\n              <Marker\r\n                position={[city.lat, city.lng]}\r\n                \r\n                key={idx}\r\n              >\r\n                <Popup>\r\n                  <b>\r\n                    {city.author}, {city.text}\r\n                  </b>\r\n                </Popup>\r\n              </Marker>))}\r\n                  <TileLayer\r\n                      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n \r\n              </Map>\r\n              </div>\r\n            </div>\r\n \r\n          </div>\r\n\r\n          </>\r\n          }else{\r\n            body=\r\n            <>\r\n \r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"chart\" id=\"mapCanvas\">\r\n              <Map center={[41.29246 ,13.5736108]} zoom={5}>\r\n           <HeatmapLayer\r\n             points={this.state.heatPoints}\r\n             longitudeExtractor={m => m[1]}\r\n             latitudeExtractor={m => m[0]}\r\n             intensityExtractor={m => parseFloat(m[2])} />\r\n           <TileLayer\r\n             url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n             attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n           />\r\n         </Map>\r\n              </div>\r\n            </div>\r\n \r\n          </div>\r\n          </>\r\n          }\r\n\r\n\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Maps - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>\r\n            <br/>\r\n            <button className='button activeButton' onClick={() => {this.displayMap()}} > Map</button>\r\n            <button className='button activeButton' onClick={() => {this.displayHeatMap()}} > Heat Map</button>\r\n            <b>Tweet Geolocalizzati : {this.state.counter}</b>\r\n            <br/><br/><br/>\r\n            {body}\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default Maps","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Collection.js",["171"],"import React from 'react';\r\n\r\nclass Collection extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.handleDbChange = this.handleDbChange.bind(this)\r\n       \r\n        console.log(props.data)\r\n    }\r\n\r\n    handleDbChange = (db) => {\r\n        \r\n        this.props.parentCallback(db);  \r\n            \r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <ul class=\"cat-sub-menu\">\r\n            {this.props.data.map((object, i)=>{\r\n                return <li>\r\n                <a href=\"#\" onClick={() => {this.handleDbChange(object)}}>{object}</a>\r\n            </li>;\r\n            \r\n            })}\r\n                               \r\n        </ul>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Collection;",["172","173"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Home.js",["174","175","176"],"import React from 'react';\r\nimport dbImg from '../img/1.jpg';\r\nimport dataImg from '../img/2.jpg';\r\nimport queryImg from '../img/3.jpg';\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n\r\n                        \r\n        <div className=\"main-wrapper\">\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1 className=\"homeTitle\">CrowdPulse Dashboard</h1>\r\n            <br/><br/><br/><br/><br/><br/><br/>\r\n            <h3>Prima di utilizzare il sistema devi selezionadre un DB</h3><br/><br/><br/>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-lg-4 howBox\">\r\n\r\n                    <div className=\"how\">\r\n                        <img src={dbImg}/>\r\n                        <br/>\r\n                    <b>1</b><br/>\r\n\r\n                        Seleziona il Db che vuoi analizzare    \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 howBox\">\r\n                    <div className=\"how\">\r\n                    <img src={dataImg}/>\r\n                    <br/>\r\n                       <b>2</b>\r\n                       <br/>\r\n\r\n                        Selezioni i grafici che ti interessano\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 howBox\">\r\n                    <div className=\"how\">\r\n                    <img src={queryImg}/>\r\n                    <br/>\r\n                    <b>3</b>\r\n                       <br/>\r\n                        Utilizza i filtri per essere più preciso \r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n\r\n\r\n      \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TweetList.js",["177","178"],"import Filters from './Filters/Filters'\r\nimport React from 'react';\r\nimport DisplayTable from './Table/TweetsTable';\r\nimport PreLoader from \"./preloader\";\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          data: [],\r\n          flag:0\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\n\r\n    handleQuery = (data) => {\r\n    \r\n      this.setState({data:data})\r\n      this.state.data = data\r\n      this.state.totalTweets = data.length\r\n      \r\n      this.setState({flag:1})\r\n    \r\n    }\r\n\r\n\r\n   \r\n    \r\n      render () {\r\n        var body;\r\n        if(this.state.flag>0){\r\n          body=<div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"chart\">\r\n              <DisplayTable data={this.state.data}/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body= <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n          <div className=\"chart\"> <PreLoader/></div>\r\n        </div>\r\n        </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Tweet List - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db= {this.props.db} tweetsData={this.props.allTweetsData} />\r\n            <br/>\r\n\r\n            {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\TimeLines.js",["179","180","181"],"import Filters from './Filters/TimeLinesFilters';\r\nimport React from 'react';\r\nimport TimeLineChart from './Charts/TimeLineChart';\r\nimport PreLoader from \"./preloader\";\r\n\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          data: [],\r\n          dataGroupByDates:[],\r\n          flag:0\r\n\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\n\r\n    handleQuery = (data) => {\r\n    \r\n      this.setState({data:data})\r\n      this.state.data = data\r\n      this.state.totalTweets = data.length\r\n      this.query()\r\n      this.setState({flag:1})\r\n    \r\n    }\r\n  \r\n\r\n      query = () =>{\r\n        var dataGroupByDates=[{\r\n          id:null,\r\n          counter:null\r\n        }]\r\n\r\n        var i = 0\r\n        var j = 0\r\n        \r\n        if(this.state.data.length!==0){\r\n          var dt = this.state.data[0].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n\r\n          while(i<this.state.data.length){\r\n\r\n            if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n              dataGroupByDates[j].counter++\r\n            }else{\r\n                j++\r\n                dataGroupByDates.push({\r\n                  id :this.state.data[i].created_at.substring(0, 10),\r\n                  counter:0\r\n                })\r\n           \r\n            }\r\n            i++\r\n          }\r\n          \r\n        }\r\n\r\n        this.setState({dataGroupByDates : dataGroupByDates})\r\n        this.state.dataGroupByDates=dataGroupByDates\r\n        \r\n      }\r\n   \r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n          body=            <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"chart\">\r\n              <TimeLineChart data={this.state.dataGroupByDates}/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Time Line - {this.props.mongodb} </h3>\r\n            <br/>\r\n           <Filters  parentCallback = {this.handleQuery.bind(this)} db={this.props.db} tweetsData={this.props.allTweetsData} /> \r\n            <br/>\r\n            {body}\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Dbs.js",["182"],"import React from 'react';\r\n\r\nclass Dbs extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.handleMongoDbChange = this.handleMongoDbChange.bind(this)\r\n\r\n        }\r\n\r\n    handleMongoDbChange = (db) => {\r\n\r\n        this.props.parentCallback(db);  \r\n            \r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <ul class=\"cat-sub-menu\">\r\n\r\n            \r\n\r\n            {this.props.data.map((object, i)=>{\r\n                return <li>\r\n                <a href=\"#\" onClick={() => {this.handleMongoDbChange(object)}}>{object}</a>\r\n            </li>;\r\n            \r\n            })}\r\n                               \r\n        </ul>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Dbs;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\WordCloud.js",["183","184","185","186","187","188","189","190","191","192"],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\LoadingData.js",["193","194","195","196","197","198","199"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport PreLoader from \"./preloader\";\r\nimport dataImg from '../img/2.jpg';\r\nimport queryImg from '../img/3.jpg';\r\n\r\n\r\n\r\n   \r\nclass Home extends React.Component {\r\n\r\n    \r\n    constructor (props) {\r\n        super(props)\r\n        this.sendData = this.sendData.bind(this)        \r\n        this.state = {\r\n          dataTags : [],\r\n          dataText : [],\r\n          dataHashtags : [],\r\n          dataTweet : [],\r\n          dataSortByDate : [],\r\n          users : [],\r\n          flag : 0\r\n          \r\n      }\r\n      \r\n      //this.getAllData(this.props.db)\r\n    }\r\n\r\n   componentDidMount(){\r\n     this.getAllData(this.props.db)\r\n   }\r\n\r\n\r\n    getAllData = (db) => {\r\n\r\n     \r\n\r\n      axios.all([\r\n        /*\r\n        axios.get('/tweet/getAnalyzedData', {\r\n          params: {\r\n            db: db\r\n          },\r\n         \r\n        }),*/\r\n        axios.get('/tweet/getDataSortByDate',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getHashtags',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getText',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getTags',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getUsers',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n      ])\r\n      .then(axios.spread((obj1, obj2, obj3, obj4,obj5 ) => {\r\n        // All requests are now complete\r\n     \r\n        this.state.dataSortByDate = obj1;\r\n        this.state.dataHashtags = obj2;\r\n        this.state.dataText = obj3;\r\n        this.state.dataTags = obj4;\r\n        this.state.users = obj5;\r\n\r\n        \r\n        this.setState({flag:1})    \r\n        this.sendData()    \r\n        \r\n        \r\n        \r\n\r\n      }));\r\n\r\n    }\r\n\r\n    sendData = () =>{\r\n      this.props.parentCallback(this.state);\r\n    }\r\n\r\n\r\n    render () {\r\n      var body;\r\n\r\n      if(this.state.flag===1){\r\n\r\n         body=  \r\n        <>\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <br/><br/>\r\n            <h3>Dati caricati correttamente hai selezionato  il db : {this.props.mongodb} </h3><br/><br/><br/>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-lg-4 howBox\">\r\n                    <div className=\"how\">\r\n                    <img src={dataImg}/>\r\n                    <br/>\r\n                       <b>2</b>\r\n                       <br/>\r\n\r\n                        Selezioni i grafici che ti interessano\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 howBox\">\r\n                    <div className=\"how\">\r\n                    <img src={queryImg}/>\r\n                    <br/>\r\n                    <b>3</b>\r\n                       <br/>\r\n                        Utilizza i filtri per essere più preciso \r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        </>\r\n      }else{\r\n        body=\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n          <div className=\"chart\"> <PreLoader/></div>\r\n        </div>\r\n        </div>\r\n      }\r\n\r\n\r\n        return(\r\n\r\n                        \r\n        <div className=\"main-wrapper\">\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1 className=\"homeTitle\">CrowdPulse Dashboard</h1>\r\n            <br/><br/><br/><br/><br/><br/><br/>\r\n              {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n\r\n\r\n      \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\SentimentCharts.js",["200","201","202","203"],"\r\nimport BarChart from './Charts/BarChart';\r\nimport EmotionBarChart from './Charts/EmotionBarChart';\r\nimport PieChart from './Charts/PieChart';\r\nimport RadarChart from './Charts/RadarChart';\r\nimport MultiLineChart from './Charts/MultiTimeLineChart';\r\nimport Filters from './Filters/SentimentFilters';\r\nimport React from 'react';\r\nimport PreLoader from \"./preloader\";\r\n\r\n\r\n\r\n\r\nclass SentimentCharts extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      totalTweets: 0,\r\n      alghoritm: 0,\r\n      counter : [],\r\n      feelCounter : [],\r\n      dataGroupByDates:[],\r\n      flag:0\r\n\r\n      }\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  if(prevProps.db!==this.props.db){\r\n    this.setState({flag:0})\r\n  }\r\n  \r\n}\r\n    handleQuery = (dataGroupByDates,counter,alghoritm,feelCounter) => {\r\n      \r\n      this.setState({counter:counter});\r\n      this.state.counter = counter;\r\n      \r\n      this.setState({dataGroupByDates:dataGroupByDates});\r\n      this.state.dataGroupByDates = dataGroupByDates;\r\n\r\n      this.setState({alghoritm:alghoritm});\r\n      this.state.alghoritm = alghoritm;\r\n\r\n      this.setState({feelCounter:feelCounter});\r\n      this.state.feelCounter = feelCounter;\r\n\r\n      this.setState({flag:1});\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n\r\n          if(this.state.alghoritm===2||this.state.alghoritm==='2'){\r\n\r\n            body=  \r\n            <>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-9\">\r\n                <div className=\"chart\">\r\n                <EmotionBarChart feelCounter={this.state.feelCounter}/>\r\n  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <div className=\"chart\">\r\n                  <RadarChart feelCounter={this.state.feelCounter} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            \r\n            <div className=\"row\">\r\n              <div className=\"col-lg-9\">\r\n                <div className=\"chart\">\r\n                <BarChart  negative={this.state.counter.negative}\r\n            neutral={this.state.counter.neutral}\r\n            positive={this.state.counter.positive}/>\r\n  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <div className=\"chart\">\r\n                  <PieChart\r\n                  negative={this.state.counter.negative}\r\n                  neutral={this.state.counter.neutral}\r\n                  positive={this.state.counter.positive} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                <MultiLineChart  data={this.state.dataGroupByDates}/>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            </>\r\n\r\n          }else{\r\n\r\n            body=  \r\n            <>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-9\">\r\n                <div className=\"chart\">\r\n                <BarChart  negative={this.state.counter.negative}\r\n            neutral={this.state.counter.neutral}\r\n            positive={this.state.counter.positive}/>\r\n  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <div className=\"chart\">\r\n                  <PieChart\r\n                  negative={this.state.counter.negative}\r\n                  neutral={this.state.counter.neutral}\r\n                  positive={this.state.counter.positive} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                <MultiLineChart  data={this.state.dataGroupByDates}/>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            </>\r\n\r\n          }\r\n\r\n         \r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n            \r\n        <div className=\"main-wrapper\">\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Sentiment - {this.props.mongodb} </h3>\r\n            <br/>\r\n            <Filters parentCallback = {this.handleQuery.bind(this)} db={this.props.db} tweetsData={this.props.allTweetsData}/>\r\n            <br/>\r\n              {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default SentimentCharts","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\preloader.js",["204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./preloader.css\";\r\n\r\nfunction PreLoader() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setloading] = useState(undefined);\r\n  const [completed, setcompleted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setloading(false);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!completed ? (\r\n        <>\r\n          {!loading ? (\r\n            <div className=\"spinner\">\r\n              <span>Loading...</span>\r\n              <div className=\"half-spinner\"></div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"completed\">&#x2713;</div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PreLoader;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\TimeLinesFilters.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import SearchUser from './SearchUser';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React from 'react';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          flagSentiment : 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          users : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n     \r\n      this.getData(this.props.tweetsData.dataSortByDate.data)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getData(this.props.tweetsData.dataSortByDate.data)\r\n      }\r\n      \r\n    }\r\n   \r\n    getData = (allData) => {\r\n\r\n            const data = allData\r\n            this.state.data = allData;\r\n            this.state.oldData = allData;\r\n            this.state.totalTweets = this.props.tweetsData.dataSortByDate.data.length;\r\n            this.query()\r\n              \r\n        }\r\n\r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n          this.state.data=tempData\r\n          this.state.totalTweets=tempData.length\r\n          }\r\n\r\n          this.handleQuery()\r\n        \r\n    \r\n    \r\n      }\r\n         //END DATES FILTERS\r\n\r\n      //TAGS SECTION\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n              \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n              \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n              temp=this.state.data[i].twitter_entities.hashtags[j]\r\n             \r\n              while(k<hashtags.length){\r\n                if(temp===hashtags[k].name){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n      ///USERS Section\r\n\r\nhandleUsers = (users) => {\r\n  if(users.length>this.state.users.length){\r\n    this.state.users=users\r\n    this.filterByUser(users)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.users=users\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByUser = (users) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n\r\n  var tempData = []\r\n  var flag = false\r\n  \r\n  while(i<this.state.data.length){\r\n    j=0   \r\n      while(j<users.length){\r\n        if(this.state.data[i].author_name===users[j].name){\r\n         \r\n          flag = true\r\n          break;               \r\n        }else{\r\n          flag = false\r\n        }\r\n        j++;\r\n      }\r\n      if(flag===true){\r\n        tempData[k]= this.state.data[i];\r\n        k++\r\n      }\r\n    i++;\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n            //RESET SECTIOn\r\n            resetFilter = () => {\r\n\r\n              this.state.data= this.state.oldData\r\n      \r\n              if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n                this.filterDataByDates()\r\n              }\r\n              \r\n              if(this.state.tags.length!==0){\r\n                this.filterByTags(this.state.tags)\r\n              }\r\n      \r\n              if(this.state.hashtags.length!==0){\r\n                this.filterByHashtags(this.state.hashtags)\r\n              }\r\n      \r\n              if(this.state.text.length!==0){\r\n                this.filterByText(this.state.text)\r\n              }\r\n      \r\n              \r\n        if(this.state.users.length!==0){\r\n          this.filterByUser(this.state.users)\r\n        }\r\n              this.handleQuery()\r\n      \r\n            }\r\n   \r\n\r\n\r\n            handleQuery = () =>{\r\n              if(this.state.data.length===0){\r\n                \r\n                this.state.totalTweets=0\r\n                this.query()\r\n                \r\n              }else{\r\n                this.state.totalTweets=this.state.data.length\r\n                this.query()\r\n              }\r\n            }\r\n\r\n      query = () =>{\r\n        this.props.parentCallback(this.state.data);\r\n      }\r\n      \r\n\r\n      \r\n            // CATEGORY\r\n            handleCategory = (event) => {\r\n\r\n              if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n                this.state.flagType = event.target.value ;  \r\n                this.state.data = this.state.oldData;\r\n                console.log(this.state.data)\r\n                this.resetFilter();\r\n                this.filterByCategory();\r\n              }else if(event.target.value===0 && this.state.flagSentiment===0){\r\n                \r\n                this.state.flagType = event.target.value ; \r\n                this.state.data = this.state.oldData;\r\n                this.resetFilter();\r\n                \r\n              }else{\r\n                this.state.flagType = event.target.value ;  \r\n                this.filterByCategory();     \r\n              }\r\n      \r\n              \r\n            }\r\n      \r\n            handleSentiment = (event) => {\r\n              if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n                this.state.flagSentiment = event.target.value ; \r\n                this.state.data = this.state.oldData;\r\n                this.resetFilter();\r\n                this.filterByCategory();\r\n              }else if(this.state.flagType==0 && event.target.value==0){\r\n               \r\n                this.state.flagSentiment = event.target.value ; \r\n                this.state.data = this.state.oldData;\r\n                this.resetFilter();\r\n               \r\n              }else{\r\n                this.state.flagSentiment = event.target.value ;  \r\n                this.filterByCategory();     \r\n              } \r\n            }\r\n\r\n        \r\n      filterByCategory = () => {\r\n\r\n        var i=0;\r\n        var k = 0;\r\n        var temp = []\r\n        var flagAll = 0;\r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') { \r\n          \r\n          if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                    flagAll = 1;\r\n                  }\r\n                }\r\n                \r\n                if(this.state.data[i].sentiment['feel-it']!==undefined && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          \r\n\r\n            \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                  \r\n                     \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                 \r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              i++;\r\n              flagAll=0;\r\n            }\r\n\r\n          }\r\n\r\n          \r\n\r\n\r\n          //Category Sent-it\r\n\r\n\r\n        } \r\n        \r\n        else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            \r\n\r\n            while(i<this.state.data.length){\r\n              \r\n              if(this.state.data[i].sentiment!==undefined){\r\n                \r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  \r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n           \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n          \r\n\r\n\r\n\r\n          //Category Feel-it\r\n         \r\n        }else{\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n\r\n         \r\n\r\n      }\r\n      \r\n      this.state.data = temp\r\n      this.handleQuery();\r\n\r\n    }\r\n              \r\n      \r\n\r\n    \r\n    render(){\r\n        return(      \r\n          <>      \r\n        <div className=\"row stat-cards\">\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Algorithm</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Sentiment</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleSentiment} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Positive</option>\r\n                            <option value=\"2\">Neutral</option>\r\n                            <option value=\"3\">Negative</option>\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n                </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>From </h4><br />\r\n                    <input type=\"date\" \r\n                    name=\"startDate\"\r\n                    onBlur={this.handleFromDatesChanges}/>\r\n\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>To </h4><br />\r\n                    <input type=\"date\"\r\n                    id=\"toDate\"\r\n                    onBlur={this.handleToDatesChanges} />\r\n                  </center>\r\n                </div>\r\n              </div> \r\n          \r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Total Tweets</h4><br />\r\n                     <h1> {this.state.totalTweets} </h1>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"row stat-cards\">\r\n        <div className=\"col-md-3 col-xl-3\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Tags</h4><br />\r\n                  <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-xl-3\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Processed Text</h4><br />\r\n                  <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}  allText = {this.props.tweetsData.dataText}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-xl-3\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Hashtags</h4><br />\r\n                  <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-xl-3\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Username</h4><br />\r\n                      <SearchUser parentCallback = {this.handleUsers.bind(this)} db = {this.props.db} allUser = {this.props.tweetsData.users}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n\r\n\r\n      </div>\r\n      </>)\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\Filters.js",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import SearchUser from './SearchUser';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React, { useEffect } from 'react';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          flagSentiment : 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          users : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n     \r\n      this.getData(this.props.tweetsData.dataSortByDate.data);\r\n   \r\n\r\n      this.state.totalTweets = this.props.tweetsData.dataSortByDate.data.length;\r\n      \r\n      this.query()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getData(this.props.tweetsData.dataSortByDate.data)\r\n      }\r\n      \r\n    }\r\n\r\n    getData = (Alldata) => {\r\n           \r\n          const data = Alldata;\r\n          this.state.data = Alldata;\r\n          this.state.oldData = Alldata\r\n          \r\n          this.setState({totalTweets : data.length})\r\n          this.query()\r\n\r\n      }    \r\n      \r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n      \r\n      //TAGS SECTION\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n            \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n              while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n                temp=this.state.data[i].twitter_entities.hashtags[j]\r\n               \r\n                while(k<hashtags.length){\r\n                  if(temp===hashtags[k].name){\r\n                    flag = true               \r\n                  }else{\r\n                    flag = false\r\n                  }\r\n                  k++\r\n                }\r\n    \r\n                if(flag===true){\r\n                  tempData[z]= this.state.data[i]\r\n                  z++\r\n                }\r\n                k=0\r\n                j++\r\n              }\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n      ///USERS Section\r\n\r\nhandleUsers = (users) => {\r\n  if(users.length>this.state.users.length){\r\n    this.state.users=users\r\n    this.filterByUser(users)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.users=users\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByUser = (users) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n\r\n  var tempData = []\r\n  var flag = false\r\n\r\n  while(i<this.state.data.length){\r\n    j=0   \r\n      while(j<users.length){\r\n        if(this.state.data[i].author_name===users[j].name){\r\n         \r\n          flag = true\r\n          break;               \r\n        }else{\r\n          flag = false\r\n        }\r\n        j++;\r\n      }\r\n      if(flag===true){\r\n        tempData[k]= this.state.data[i];\r\n        k++\r\n      }\r\n    i++;\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n      //RESET SECTIOn\r\n      resetFilter = () => {\r\n\r\n        \r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n        \r\n        if(this.state.users.length!==0){\r\n          this.filterByUser(this.state.users)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n            // CATEGORY\r\n      handleCategory = (event) => {\r\n\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagType = event.target.value ;  \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(event.target.value===0 && this.state.flagSentiment===0){\r\n          \r\n          this.state.flagType = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          \r\n        }else{\r\n          this.state.flagType = event.target.value ;  \r\n          this.filterByCategory();     \r\n        }\r\n\r\n        \r\n      }\r\n\r\n      handleSentiment = (event) => {\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(this.state.flagType==0 && event.target.value==0){\r\n         \r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n         \r\n        }else{\r\n          this.state.flagSentiment = event.target.value ;  \r\n          this.filterByCategory();     \r\n        } \r\n        \r\n      }\r\n\r\n      filterByCategory = () => {\r\n\r\n        var i=0;\r\n        var k = 0;\r\n        var temp = []\r\n        var flagAll = 0;\r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') { \r\n          \r\n          if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                    flagAll = 1;\r\n                  }\r\n                }\r\n                \r\n                if(this.state.data[i].sentiment['feel-it']!==undefined && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          \r\n\r\n            \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                  \r\n                     \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                 \r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              i++;\r\n              flagAll=0;\r\n            }\r\n\r\n          }\r\n\r\n          \r\n\r\n\r\n          //Category Sent-it\r\n\r\n\r\n        } \r\n        \r\n        else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            \r\n\r\n            while(i<this.state.data.length){\r\n              \r\n              if(this.state.data[i].sentiment!==undefined){\r\n                \r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  \r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n           \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n          \r\n\r\n\r\n\r\n          //Category Feel-it\r\n         \r\n        }else{\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n\r\n         \r\n\r\n      }\r\n      \r\n      this.state.data = temp\r\n      this.handleQuery();\r\n\r\n    }\r\n\r\n      \r\n\r\n\r\n   \r\n      //QUERY SECTIOn\r\n\r\n      handleQuery = () =>{\r\n        if(this.state.data.length===0){\r\n          \r\n          this.state.totalTweets=0\r\n          this.query()\r\n          \r\n        }else{\r\n          \r\n          this.state.totalTweets=this.state.data.length\r\n          this.query()\r\n        }\r\n      }\r\n\r\n      query = () =>{\r\n        this.props.parentCallback(this.state.data);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(      \r\n          <>      \r\n        <div className=\"row stat-cards\">\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Algorithm</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Sentiment</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleSentiment} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Positive</option>\r\n                            <option value=\"2\">Neutral</option>\r\n                            <option value=\"3\">Negative</option>\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>From </h4><br />\r\n                    <input type=\"date\" \r\n                    name=\"startDate\"\r\n                    onBlur={this.handleFromDatesChanges}/>\r\n\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>To </h4><br />\r\n                    <input type=\"date\"\r\n                    id=\"toDate\"\r\n                    onBlur={this.handleToDatesChanges} />\r\n                  </center>\r\n                </div>\r\n              </div> \r\n          \r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n        <div className=\"col-md-4 col-xl-4\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Total Tweets</h4><br />\r\n                     <h1> {this.state.totalTweets} </h1>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"row stat-cards\">\r\n        <div className=\"col-md-3 col-xl-3\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Tags</h4><br />\r\n                  <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-xl-3\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Processed Text</h4><br />\r\n                  <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}  allText = {this.props.tweetsData.dataText}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-xl-3\">\r\n          <article className=\"stat-cards-item\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                  <center><h4>Hashtags</h4><br />\r\n                  <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                    \r\n                  </center>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-xl-3\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Username</h4><br />\r\n                      <SearchUser parentCallback = {this.handleUsers.bind(this)} db = {this.props.db} allUser = {this.props.tweetsData.users}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n\r\n\r\n      </div>\r\n      </>)\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\WordChartFilters.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import SearchUser from './SearchUser';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\nimport React, { useEffect } from 'react';\r\nimport PreLoader from '../preloader';\r\n\r\n\r\nclass Filters extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.query=this.query.bind(this)\r\n\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          flagSentiment : 0,\r\n          flagTypeWord:0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          tags : [],\r\n          text : [],\r\n          users : [],\r\n          hashtags : [],\r\n          fromDate: null,\r\n          toDate : null,\r\n          loading:true\r\n\r\n      }\r\n     \r\n      this.getData(this.props.tweetsData.dataSortByDate.data);\r\n   \r\n\r\n      this.state.totalTweets = this.props.tweetsData.dataSortByDate.data.length;\r\n      \r\n \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getData(this.props.tweetsData.dataTweet.data)\r\n      }\r\n      \r\n    }\r\n\r\n    getData = (Alldata) =>{\r\n           \r\n          const data = Alldata;\r\n          this.state.data = Alldata;\r\n          this.state.oldData = Alldata\r\n          this.state.loading=true;\r\n          this.setState({loading:true});\r\n          \r\n          this.setState({totalTweets : data.length})\r\n          this.query()\r\n\r\n      }    \r\n      \r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n      \r\n      //TAGS SECTION\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\n      filterByText = (text) => {\r\n\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n            \r\n              while(k<text.length){\r\n                if(temp.some(a => a.includes(text[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n\r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n       \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n  /// HASHTAGS SECTION\r\n\r\n  handleHashtags = (hashtags) => {\r\n    if(hashtags.length>this.state.hashtags.length){\r\n      this.state.hashtags=hashtags\r\n      this.filterByHashtags(hashtags)\r\n      this.handleQuery()\r\n    }else{\r\n      this.state.hashtags=hashtags\r\n      this.resetFilter()\r\n    }\r\n  }\r\n      filterByHashtags = (hashtags) => {\r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].twitter_entities!==undefined){\r\n            if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n              while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n                temp=this.state.data[i].twitter_entities.hashtags[j]\r\n               \r\n                while(k<hashtags.length){\r\n                  if(temp===hashtags[k].name){\r\n                    flag = true               \r\n                  }else{\r\n                    flag = false\r\n                  }\r\n                  k++\r\n                }\r\n    \r\n                if(flag===true){\r\n                  tempData[z]= this.state.data[i]\r\n                  z++\r\n                }\r\n                k=0\r\n                j++\r\n              }\r\n            }\r\n          }\r\n          i++\r\n        }\r\n\r\n               \r\n        this.state.data=tempData\r\n        this.state.totalTweets=tempData.length\r\n        this.handleQuery()\r\n      }\r\n\r\n      ///USERS Section\r\n\r\nhandleUsers = (users) => {\r\n  if(users.length>this.state.users.length){\r\n    this.state.users=users\r\n    this.filterByUser(users)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.users=users\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByUser = (users) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n\r\n  var tempData = []\r\n  var flag = false\r\n  \r\n  while(i<this.state.data.length){\r\n    j=0   \r\n      while(j<users.length){\r\n        if(this.state.data[i].author_name===users[j].name){\r\n         \r\n          flag = true\r\n          break;               \r\n        }else{\r\n          flag = false\r\n        }\r\n        j++;\r\n      }\r\n      if(flag===true){\r\n        tempData[k]= this.state.data[i];\r\n        k++\r\n      }\r\n    i++;\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n      //RESET SECTIOn\r\n      resetFilter = () => {\r\n\r\n        \r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n        if(this.state.users.length!==0){\r\n          this.filterByUser(this.state.users)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n            // CATEGORY\r\n      handleCategory = (event) => {\r\n\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagType = event.target.value ;  \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(event.target.value===0 && this.state.flagSentiment===0){\r\n          \r\n          this.state.flagType = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          \r\n        }else{\r\n          this.state.flagType = event.target.value ;  \r\n          this.filterByCategory();     \r\n        }\r\n                \r\n      }\r\n\r\n      handleTypeWord = (event) =>{\r\n\r\n        this.state.flagTypeWord = event.target.value;\r\n        this.state.data = this.state.oldData;\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n      handleSentiment = (event) => {\r\n        if(this.state.flagType!==0 && this.state.flagSentiment!==0){\r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n          this.filterByCategory();\r\n        }else if(this.state.flagType==0 && event.target.value==0){\r\n         \r\n          this.state.flagSentiment = event.target.value ; \r\n          this.state.data = this.state.oldData;\r\n          this.resetFilter();\r\n         \r\n        }else{\r\n          this.state.flagSentiment = event.target.value ;  \r\n          this.filterByCategory();     \r\n        } \r\n        \r\n      }\r\n\r\n      filterByCategory = () => {\r\n\r\n        var i=0;\r\n        var k = 0;\r\n        var temp = []\r\n        var flagAll = 0;\r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') { \r\n          \r\n          if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                    flagAll = 1;\r\n                  }\r\n                }\r\n                \r\n                if(this.state.data[i].sentiment['feel-it']!==undefined && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          \r\n\r\n            \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              flagAll=0;\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative'){\r\n                    flagAll = 1;\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                  \r\n                     \r\n                }\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined  && flagAll===0){\r\n                 \r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;\r\n                  }\r\n                                   \r\n                }\r\n              }\r\n              i++;\r\n              flagAll=0;\r\n            }\r\n\r\n          }\r\n\r\n          \r\n\r\n\r\n          //Category Sent-it\r\n\r\n\r\n        } \r\n        \r\n        else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            \r\n\r\n            while(i<this.state.data.length){\r\n              \r\n              if(this.state.data[i].sentiment!==undefined){\r\n                \r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  \r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='positive'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }\r\n                         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n           \r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='neutral'){\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }         \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n          \r\n\r\n\r\n\r\n          //Category Feel-it\r\n         \r\n        }else{\r\n\r\n          if (this.state.flagSentiment===0 || this.state.flagSentiment==='0'){\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  temp[k]=this.state.data[i];\r\n                  k++;   \r\n                }\r\n             }\r\n            i++;\r\n          }\r\n          }else if(this.state.flagSentiment===1 || this.state.flagSentiment==='1'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===2 || this.state.flagSentiment==='2'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='neutral')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }else if(this.state.flagSentiment===3 || this.state.flagSentiment==='3'){\r\n\r\n            while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  if(this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  {\r\n                    temp[k]=this.state.data[i];\r\n                    k++;   \r\n                  }          \r\n                }\r\n              }\r\n              i++;\r\n            }\r\n\r\n          }\r\n\r\n         \r\n\r\n      }\r\n      \r\n      this.state.data = temp\r\n      this.handleQuery();\r\n\r\n    }\r\n\r\n      \r\n\r\n\r\n   \r\n      //QUERY SECTIOn\r\n\r\n      handleQuery = () =>{\r\n        if(this.state.data.length===0){\r\n          \r\n          this.state.totalTweets=0\r\n          this.query()\r\n          \r\n        }else{\r\n          \r\n          this.state.totalTweets=this.state.data.length\r\n          this.query()\r\n        }\r\n      }\r\n\r\n      query = () =>{\r\n        var temp = {\r\n            data:null,\r\n            typeWord:null\r\n        };\r\n        temp.data = this.state.data;\r\n        temp.typeWord = this.state.flagTypeWord;\r\n        this.state.loading=false;\r\n        this.setState({loading:false});\r\n        this.props.parentCallback(temp);\r\n      }\r\n      \r\n      \r\n\r\n    render(){\r\n      const renderContent = () => {\r\n        var body;\r\n        if(this.state.loading===true){\r\n          body =  <PreLoader/>\r\n        }else{\r\n         body=\r\n          <>      \r\n          <div className=\"row stat-cards\">\r\n  \r\n          <div className=\"col-md-4 col-xl-4\">\r\n                  <article className=\"stat-cards-item\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"stat-cards-info\">\r\n                          <center><h4>Algorithm</h4><br />\r\n                            <select id=\"sel1\" onChange={this.handleCategory} >\r\n                              <option value=\"0\">All</option>\r\n                              <option value=\"1\">Sent-it</option>\r\n                              <option value=\"2\">Feel-it</option>\r\n  \r\n                            </select>\r\n  \r\n                          </center>\r\n                        </div>\r\n                      </div>\r\n  \r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"stat-cards-info\">\r\n                          <center><h4>Sentiment</h4><br />\r\n                            <select id=\"sel1\" onChange={this.handleSentiment} >\r\n                              <option value=\"0\">All</option>\r\n                              <option value=\"1\">Positive</option>\r\n                              <option value=\"2\">Neutral</option>\r\n                              <option value=\"3\">Negative</option>\r\n                            </select>\r\n  \r\n                          </center>\r\n                        </div>\r\n                      </div>\r\n  \r\n  \r\n                    </div>\r\n  \r\n                  </article>\r\n                </div>\r\n  \r\n          <div className=\"col-md-2 col-xl-2\">\r\n            <article className=\"stat-cards-item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 col-xl-12\">\r\n                <div className=\"stat-cards-info\">\r\n                          <center><h4>Type</h4><br />\r\n                            <select id=\"sel1\" onChange={this.handleTypeWord} >\r\n                              <option value=\"0\">Text</option>\r\n                              <option value=\"1\">Tags</option>\r\n                              <option value=\"2\">Hashtags</option>\r\n                            </select>\r\n  \r\n                          </center>\r\n                        </div>\r\n                </div>\r\n  \r\n  \r\n              </div>\r\n  \r\n            </article>\r\n          </div>\r\n  \r\n          <div className=\"col-md-4 col-xl-4\">\r\n            <article className=\"stat-cards-item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"stat-cards-info\">\r\n                    <center><h4>From </h4><br />\r\n                      <input type=\"date\" \r\n                      name=\"startDate\"\r\n                      onBlur={this.handleFromDatesChanges}/>\r\n  \r\n                      \r\n                    </center>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"stat-cards-info\">\r\n                    <center><h4>To </h4><br />\r\n                      <input type=\"date\"\r\n                      id=\"toDate\"\r\n                      onBlur={this.handleToDatesChanges} />\r\n                    </center>\r\n                  </div>\r\n                </div> \r\n            \r\n              </div>\r\n  \r\n            </article>\r\n          </div>\r\n          <div className=\"col-md-2 col-xl-2\">\r\n            <article className=\"stat-cards-item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 col-xl-12\">\r\n                  <div className=\"stat-cards-info\">\r\n                    <center><h4>Total Tweets</h4><br />\r\n                       <h1> {this.state.totalTweets} </h1>\r\n                      \r\n                    </center>\r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n              </div>\r\n  \r\n            </article>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"row stat-cards\">\r\n          <div className=\"col-md-3 col-xl-3\">\r\n            <article className=\"stat-cards-item\">\r\n              <div className=\"row\">\r\n  \r\n                <div className=\"col-md-12 col-xl-12\">\r\n                  <div className=\"stat-cards-info\">\r\n                    <center><h4>Tags</h4><br />\r\n                    <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                      \r\n                    </center>\r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n              </div>\r\n  \r\n            </article>\r\n          </div>\r\n  \r\n          <div className=\"col-md-3 col-xl-3\">\r\n            <article className=\"stat-cards-item\">\r\n              <div className=\"row\">\r\n  \r\n                <div className=\"col-md-12 col-xl-12\">\r\n                  <div className=\"stat-cards-info\">\r\n                    <center><h4>Processed Text</h4><br />\r\n                    <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db}  />\r\n                      \r\n                    </center>\r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n              </div>\r\n  \r\n            </article>\r\n          </div>\r\n  \r\n          <div className=\"col-md-3 col-xl-3\">\r\n            <article className=\"stat-cards-item\">\r\n              <div className=\"row\">\r\n  \r\n                <div className=\"col-md-12 col-xl-12\">\r\n                  <div className=\"stat-cards-info\">\r\n                    <center><h4>Hashtags</h4><br />\r\n                    <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                      \r\n                    </center>\r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n              </div>\r\n  \r\n            </article>\r\n          </div>\r\n  \r\n          <div className=\"col-md-3 col-xl-3\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n      \r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Username</h4><br />\r\n                        <SearchUser parentCallback = {this.handleUsers.bind(this)} db = {this.props.db} allUser = {this.props.tweetsData.users}/>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n      \r\n      \r\n                  </div>\r\n      \r\n                </article>\r\n              </div>\r\n  \r\n  \r\n        </div>\r\n          </>\r\n        } \r\n\r\n        return body;\r\n\r\n       }\r\n        return(   \r\n            renderContent()          \r\n          )\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TweetsTable.js",["347"],"import React, { useState } from \"react\";\r\n\r\n\r\nimport \"./table.css\";\r\nimport Table from \".\";\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport XLSX from 'xlsx'\r\n\r\nvar exportData=[];\r\nconst columns = [\r\n  { title: \"username\", field: \"author_username\", },\r\n  { title: \"text\", field: \"raw_text\", },\r\n  { title: \"tags\", field: \"tags\",  }]\r\n\r\nconst setData = (props) =>{\r\n \r\n  var i = 0\r\n  while (i<props.data.length) {\r\n    exportData.push({\r\n      author_username:props.data[i].author_username,\r\n      raw_text:props.data[i].raw_text,\r\n      tags:printTags(props.data[i])\r\n    })\r\n    i++\r\n  }  \r\n}\r\n\r\nconst downloadExcel = () => {\r\n  const newData = exportData.map(row => {\r\n    delete row.tableData\r\n    return row\r\n  })\r\n  const workSheet = XLSX.utils.json_to_sheet(newData)\r\n  const workBook = XLSX.utils.book_new()\r\n  XLSX.utils.book_append_sheet(workBook, workSheet, \"students\")\r\n  //Buffer\r\n  XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" })\r\n  //Binary string\r\n  XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" })\r\n  //Download\r\n  XLSX.writeFile(workBook, \"TweetData.xlsx\")\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  const printTags = (data) =>{\r\n    var i = 0\r\n    var temp \r\n     var tags = []\r\n    \r\n     if(data.tags!==undefined){\r\n\r\n     while(i<data.tags.tag_me.length){\r\n        temp = data.tags.tag_me[i].split(\" : \")\r\n        tags = tags+\",\"+temp[0]\r\n        i++\r\n    }\r\n    return tags\r\n\r\n     }else{\r\n       return(\r\n         \"\"\r\n       )\r\n     }\r\n  \r\n    \r\n  }\r\n\r\nconst downloadPdf = () => {\r\n  const doc = new jsPDF('landscape')\r\n\r\n  console.log(exportData)\r\n  doc.text(\"Tweet Details\", 20, 10)\r\n  doc.autoTable({\r\n    theme: \"grid\",\r\n    columns: columns.map(col => ({ ...col, dataKey: col.field })),\r\n    body: exportData\r\n  })\r\n  doc.save('table.pdf')\r\n}\r\n\r\nconst DisplayTable = (props) => {\r\n  setData(props)\r\n  return (\r\n    <main className=\"container_table\">\r\n      <button className='button activeButton' onClick={() => {downloadPdf()}} > Export Table</button>\r\n      <button className='button activeButton' onClick={() => {downloadExcel()}} > Export Excel</button>\r\n      <br/><br/><br/>\r\n      <div className=\"wrapper_table\">\r\n        <Table data={props.data} rowsPerPage={100} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DisplayTable;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\TimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\BarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\PieChart.js",["348"],"import React from \"react\";\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\n\r\nconst PieChart = (props) =>{\r\n  var negative = props.negative\r\n  var positive = props.positive\r\n  var neutral = props.neutral\r\n  var data2 = [negative, neutral, positive]\r\n\r\n  \r\n  let total = data2.reduce((accumulator, currentValue) => accumulator + currentValue);\r\n    \r\n  var labels = data2.map(value => (value / total * 100).toFixed(2) + '%');\r\n\r\n  const  data = {\r\n    labels: [\r\n      'Negative = ' + labels[0],\r\n      'Neutral = '  + labels[1],\r\n      'Positive = ' + labels[2]\r\n    ],\r\n    datasets: [{\r\n      label: 'Sentiment',\r\n      data: [negative, neutral, positive],\r\n      \r\n      backgroundColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(255, 205, 86)'\r\n      ],\r\n      hoverOffset: 4\r\n    }]\r\n  }\r\n  const option = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem, data) {\r\n          var dataset = data.datasets[tooltipItem.datasetIndex];\r\n          var meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n          var total = meta.total;\r\n          var currentValue = dataset.data[tooltipItem.index];\r\n          var percentage = parseFloat((currentValue/total*100).toFixed(2));\r\n          return currentValue + ' (' + percentage + '%)';\r\n        },\r\n        title: function(tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    return(\r\n        <div>\r\n            <Pie\r\n\t data = {data}\r\n\twidth={100}\r\n\theight={400}\r\n            />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PieChart","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\MultiTimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SentimentFilters.js",["349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React from 'react';\r\nimport SearchUser from './SearchUser';\r\nimport SearchFilters from './SearchFilters';\r\nimport SearchText from './SearchText';\r\nimport SearchHashtag from './SearchHashtag';\r\n\r\nclass Filters extends React.Component{\r\n    constructor (props) {\r\n        super(props)\r\n        this.sendData=this.sendData.bind(this)\r\n\r\n        this.state = {\r\n            totalTweets: 0,\r\n            flagType: 0,\r\n            counter : [],\r\n            feelCounter:[],\r\n            oldData : [],\r\n            data: [],\r\n            tags : [],\r\n            text : [],\r\n            hashtags : [],\r\n            users : [],\r\n            dataGroupByDates: [],\r\n            fromDate: null,\r\n            toDate : null,\r\n\r\n        }\r\n      \r\n        \r\n        this.getSentimentData(this.props.tweetsData.dataSortByDate.data)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.mongodb!==this.props.mongodb){\r\n        this.getSentimentData(this.props.tweetsData.dataSortByDate.data)\r\n      }\r\n      \r\n    }\r\n\r\n    getSentimentData = (data) => {\r\n\r\n          \r\n          \r\n          var negative = 0;\r\n          var positive = 0;\r\n          var neutral = 0;\r\n          var i=0;\r\n          var joy =0;\r\n          var anger = 0;\r\n          var sadness = 0;\r\n          var fear =0;\r\n          this.state.totalTweets = data.length;\r\n          var feelCounter = [];\r\n          while(i<data.length){\r\n            if(data[i].sentiment!==undefined){\r\n              if(data[i].sentiment['sent-it']!==undefined){\r\n                if (data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  negative++\r\n                else if (data[i].sentiment['sent-it'].sentiment==='positive')\r\n                  positive ++\r\n                else\r\n                neutral ++\r\n              }\r\n            }\r\n   \r\n              i++\r\n          }\r\n          i=0\r\n          while(i<data.length){\r\n            if(data[i].sentiment!==undefined){\r\n              if(data[i].sentiment['feel-it']!==undefined){\r\n                if (data[i].sentiment['feel-it'].sentiment==='negative')\r\n                  negative++\r\n                else if (data[i].sentiment['feel-it'].sentiment==='positive')\r\n                  positive ++\r\n                else\r\n                neutral ++\r\n                \r\n                \r\n             //Get Emotion\r\n\r\n                if(data[i].sentiment['feel-it'].emotion==='joy'){\r\n                  joy++;\r\n                }else if(data[i].sentiment['feel-it'].emotion==='anger'){\r\n                  anger++;\r\n                }else if(data[i].sentiment['feel-it'].emotion==='sadness'){\r\n                  sadness++;\r\n                }else if(data[i].sentiment['feel-it'].emotion==='fear'){\r\n                  fear++;\r\n                }\r\n              }\r\n          }        \r\n          \r\n\r\n          i++\r\n        }\r\n\r\n\r\n        feelCounter = {\r\n          joy: joy,\r\n          sadness: sadness,\r\n          anger: anger,\r\n          fear : fear\r\n       }\r\n        \r\n    \r\n          var tempCounter = {\r\n              positive: positive,\r\n              negative: negative,\r\n              neutral: neutral,\r\n           }\r\n    \r\n    \r\n          this.setState({ counter: tempCounter })\r\n          this.state.counter = tempCounter;\r\n          this.setState({ feelCounter: feelCounter })\r\n          this.state.feelCounter = feelCounter;\r\n          this.setState({data : data})\r\n          this.state.data = data;\r\n          this.setState({oldData : data})\r\n          this.state.oldData = data;\r\n\r\n          \r\n\r\n          var dataGroupByDates=[{\r\n            id:null,\r\n            counterPositive:null,\r\n            counterNegative:null,\r\n            counterNeutral:null,\r\n          }];\r\n  \r\n         \r\n\r\n          //MultiLine Charts\r\n\r\n  \r\n          var i = 0\r\n          var j = 0\r\n          \r\n          if(this.state.data.length!==0){\r\n            var dt = this.state.data[0].created_at.substring(0, 10)\r\n            dataGroupByDates[0].id=dt\r\n  \r\n            while(i<this.state.data.length){\r\n  \r\n              if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                  switch (this.state.data[i].sentiment['sent-it'].sentiment) {\r\n                    case 'positive':\r\n                      dataGroupByDates[j].counterPositive++;\r\n                      break;\r\n                    case 'negative':\r\n                      dataGroupByDates[j].counterNegative++;\r\n                      break;\r\n                    case 'neutral':\r\n                      dataGroupByDates[j].counterNeutral++;\r\n                      break;\r\n                  }\r\n                }\r\n\r\n                if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                  switch (this.state.data[i].sentiment['feel-it'].sentiment) {\r\n                    case 'positive':\r\n                      dataGroupByDates[j].counterPositive++;\r\n                      break;\r\n                    case 'negative':\r\n                      dataGroupByDates[j].counterNegative++;\r\n                      break;\r\n                    case 'neutral':\r\n                      dataGroupByDates[j].counterNeutral++;\r\n                      break;\r\n                  }\r\n                }\r\n\r\n               \r\n              }else{\r\n                  j++\r\n                  dataGroupByDates.push({\r\n                    id :this.state.data[i].created_at.substring(0, 10),\r\n                    counterPositive:0,\r\n                    counterNegative:0,\r\n                    counterNeutral:0,\r\n                  })             \r\n              }\r\n              i++\r\n            }\r\n            \r\n          }\r\n  \r\n          this.setState({dataGroupByDates : dataGroupByDates});\r\n          this.state.dataGroupByDates=dataGroupByDates;       \r\n          this.sendData();\r\n      }    \r\n      \r\n    \r\n      //DATES FILTERS\r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n         \r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          if(this.state.data.length===0){\r\n            this.state.data= this.state.oldData\r\n            this.filterDataByDates()\r\n            this.resetFilter()\r\n          }else{\r\n            this.filterDataByDates()\r\n          }\r\n        }else{\r\n          this.resetFilter()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {   \r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n\r\n      //END DATES FILTERS\r\n    \r\n      // CATEGORY\r\n      handleCategory = (event) => {\r\n        this.state.flagType = event.target.value        \r\n        this.handleQuery()\r\n      }\r\n\r\n      //END CATEGORY\r\n\r\n\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>this.state.tags.length){\r\n          this.state.tags = tags\r\n          this.filterByTags(tags)\r\n          this.handleQuery()\r\n        }else{\r\n          this.state.tags = tags\r\n          this.resetFilter()\r\n\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        //this.setState({oldData: this.state.data}) //save last data state\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          if(this.state.data[i].tags!==undefined){\r\n            while(j<this.state.data[i].tags.tag_me.length){\r\n              temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n              \r\n              while(k<tags.length){\r\n                if(temp.some(a => a.includes(tags[k].name))===true){\r\n                  flag = true               \r\n                }else{\r\n                  flag = false\r\n                }\r\n                k++\r\n              }\r\n  \r\n              if(flag===true){\r\n                tempData[z]= this.state.data[i]\r\n                z++\r\n              }\r\n              k=0\r\n              j++\r\n            }\r\n          }\r\n\r\n          i++\r\n        }\r\n\r\n        this.state.data = tempData //set Data\r\n        \r\n        \r\n        \r\n      }\r\n\r\n\r\n      \r\n/// TEXT SECTION\r\n\r\nhandleText = (text) => {\r\n  if(text.length>this.state.text.length){\r\n\r\n    this.state.text=text \r\n    this.filterByText(text)\r\n    this.handleQuery()\r\n  }else{\r\n   this.state.text=text \r\n   this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByText = (text) => {\r\n\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n  var z = 0\r\n  var temp\r\n  var tempData = []\r\n  var flag = false\r\n  \r\n  while(i<this.state.data.length){\r\n    j=0\r\n    if(this.state.data[i].spacy!==undefined){\r\n      while(j<this.state.data[i].spacy.processed_text.length){\r\n        temp=this.state.data[i].spacy.processed_text[j].split(\" \")\r\n        \r\n        while(k<text.length){\r\n          if(temp.some(a => a.includes(text[k].name))===true){\r\n            flag = true               \r\n          }else{\r\n            flag = false\r\n          }\r\n          k++\r\n        }\r\n  \r\n        if(flag===true){\r\n          tempData[z]= this.state.data[i]\r\n          z++\r\n        }\r\n        k=0\r\n        j++\r\n      }\r\n    }\r\n\r\n    i++\r\n  }\r\n\r\n \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n\r\n  \r\n}\r\n\r\n/// HASHTAGS SECTION\r\n\r\nhandleHashtags = (hashtags) => {\r\n  if(hashtags.length>this.state.hashtags.length){\r\n    this.state.hashtags=hashtags\r\n    this.filterByHashtags(hashtags)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.hashtags=hashtags\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByHashtags = (hashtags) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n  var z = 0\r\n  var temp\r\n  var tempData = []\r\n  var flag = false\r\n\r\n  while(i<this.state.data.length){\r\n    j=0\r\n    if(this.state.data[i].twitter_entities!==undefined){\r\n    if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n      while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n        temp=this.state.data[i].twitter_entities.hashtags[j]\r\n       \r\n        while(k<hashtags.length){\r\n          if(temp===hashtags[k].name){\r\n            flag = true               \r\n          }else{\r\n            flag = false\r\n          }\r\n          k++\r\n        }\r\n\r\n        if(flag===true){\r\n          tempData[z]= this.state.data[i]\r\n          z++\r\n        }\r\n        k=0\r\n        j++\r\n      }\r\n    }\r\n  }\r\n\r\n    i++\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n\r\n///USERS Section\r\n\r\nhandleUsers = (users) => {\r\n  if(users.length>this.state.users.length){\r\n    this.state.users=users\r\n    this.filterByUser(users)\r\n    this.handleQuery()\r\n  }else{\r\n    this.state.users=users\r\n    this.resetFilter()\r\n  }\r\n}\r\n\r\nfilterByUser = (users) => {\r\n  var i =0\r\n  var j =0\r\n  var k = 0\r\n\r\n  var tempData = []\r\n  var flag = false\r\n  \r\n  while(i<this.state.data.length){\r\n    j=0   \r\n      while(j<users.length){\r\n        if(this.state.data[i].author_name===users[j].name){\r\n         \r\n          flag = true\r\n          break;               \r\n        }else{\r\n          flag = false\r\n        }\r\n        j++;\r\n      }\r\n      if(flag===true){\r\n        tempData[k]= this.state.data[i];\r\n        k++\r\n      }\r\n    i++;\r\n  }\r\n\r\n         \r\n  this.state.data=tempData\r\n  this.state.totalTweets=tempData.length\r\n  \r\n}\r\n\r\n  //QUERY SECTION  \r\nhandleQuery = () => {\r\n  if(this.state.data.length===0){\r\n    \r\n    var tempCounter = {\r\n      positive:0,\r\n      negative:0,\r\n      neutral:0\r\n    }\r\n    this.state.totalTweets=0\r\n    this.state.counter = tempCounter //reset counter\r\n    this.sendData()\r\n    \r\n  }else{\r\n    this.state.totalTweets=this.state.data.length\r\n    this.query()\r\n  }\r\n}\r\n\r\n      query = () => {\r\n       \r\n        var negative = 0;\r\n        var positive = 0;\r\n        var neutral = 0;\r\n        var joy = 0;\r\n        var sadness=0;\r\n        var anger = 0;\r\n        var fear = 0;\r\n\r\n        var i=0;\r\n        var tempCounter;\r\n        var feelCounter;\r\n        \r\n        if (this.state.flagType===0 || this.state.flagType==='0') {               \r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n            \r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          i=0;\r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }}\r\n            i++\r\n          }\r\n    \r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n\r\n        }else if(this.state.flagType===1 || this.state.flagType==='1'){\r\n        \r\n          while(i<this.state.data.length){\r\n              if(this.state.data[i].sentiment!==undefined){\r\n                if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n\r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            \r\n\r\n              }\r\n            }\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n\r\n          \r\n        }else{\r\n          \r\n          \r\n          while(i<this.state.data.length){\r\n            if(this.state.data[i].sentiment!==undefined){\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n              }\r\n               //Get Emotion\r\n\r\n              if(this.state.data[i].sentiment['feel-it'].emotion==='joy'){\r\n                joy++;\r\n              }else if(this.state.data[i].sentiment['feel-it'].emotion==='anger'){\r\n                anger++;\r\n              }else if(this.state.data[i].sentiment['feel-it'].emotion==='sadness'){\r\n                sadness++;\r\n              }else if(this.state.data[i].sentiment['feel-it'].emotion==='fear'){\r\n                fear++;\r\n              }\r\n            }        \r\n            \r\n\r\n            i++\r\n          }\r\n\r\n\r\n          feelCounter = {\r\n            joy: joy,\r\n            sadness: sadness,\r\n            anger: anger,\r\n            fear : fear\r\n         }\r\n\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n        }    \r\n        \r\n        this.state.counter = tempCounter\r\n        this.state.feelCounter = feelCounter\r\n\r\n         \r\n\r\n          \r\n\r\n        var dataFeelGroupByDates=[{\r\n          id:null,\r\n          counterPositive:0,\r\n          counterNegative:0,\r\n          counterNeutral:0,\r\n        }];\r\n\r\n        var dataSentGroupByDates=[{\r\n          id:null,\r\n          counterPositive:0,\r\n          counterNegative:0,\r\n          counterNeutral:0,\r\n        }];\r\n\r\n        var dataGroupByDates=[{\r\n          id:null,\r\n          counterPositive:0,\r\n          counterNegative:0,\r\n          counterNeutral:0,\r\n        }];\r\n\r\n      \r\n        \r\n\r\n        //MultiLine Charts\r\n\r\n        var j = 0;\r\n        i = 0;\r\n        if(this.state.data.length!==0){\r\n          var dt = this.state.data[0].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n          dataSentGroupByDates[0].id=dt\r\n          dataFeelGroupByDates[0].id=dt\r\n\r\n          while(i<this.state.data.length){\r\n\r\n            if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n              if(this.state.data[i].sentiment['sent-it']!==undefined){\r\n                switch (this.state.data[i].sentiment['sent-it'].sentiment) {\r\n                  case 'positive':\r\n                    dataGroupByDates[j].counterPositive++;\r\n                    dataSentGroupByDates[j].counterPositive++;\r\n                    break;\r\n                  case 'negative':\r\n                    dataGroupByDates[j].counterNegative++;\r\n                    dataSentGroupByDates[j].counterNegative++;\r\n                    break;\r\n                  case 'neutral':\r\n                    dataGroupByDates[j].counterNeutral++;\r\n                    dataSentGroupByDates[j].counterNeutral++;\r\n                    break;\r\n                }\r\n              }\r\n\r\n              if(this.state.data[i].sentiment['feel-it']!==undefined){\r\n                switch (this.state.data[i].sentiment['feel-it'].sentiment) {\r\n                  case 'positive':\r\n                    dataGroupByDates[j].counterPositive++;\r\n                    dataFeelGroupByDates[j].counterPositive++;\r\n                    break;\r\n                  case 'negative':\r\n                    dataGroupByDates[j].counterNegative++;\r\n                    dataFeelGroupByDates[j].counterNegative++;\r\n                    break;\r\n                  case 'neutral':\r\n                    dataGroupByDates[j].counterNeutral++;\r\n                    dataFeelGroupByDates[j].counterNeutral++;\r\n                    break;\r\n                }\r\n              }\r\n\r\n             \r\n            }else{\r\n                j++\r\n                dataGroupByDates.push({\r\n                  id :this.state.data[i].created_at.substring(0, 10),\r\n                  counterPositive:0,\r\n                  counterNegative:0,\r\n                  counterNeutral:0,\r\n                })\r\n\r\n                dataSentGroupByDates.push({\r\n                  id :this.state.data[i].created_at.substring(0, 10),\r\n                  counterPositive:0,\r\n                  counterNegative:0,\r\n                  counterNeutral:0,\r\n                })\r\n                \r\n                dataFeelGroupByDates.push({\r\n                  id :this.state.data[i].created_at.substring(0, 10),\r\n                  counterPositive:0,\r\n                  counterNegative:0,\r\n                  counterNeutral:0,\r\n                })\r\n           \r\n            }\r\n            i++\r\n          }\r\n          \r\n        }\r\n\r\n        \r\n        if(this.state.flagType===0 ||this.state.flagType==='0'){\r\n          this.setState({dataGroupByDates : dataGroupByDates});\r\n          this.state.dataGroupByDates=dataGroupByDates;  \r\n        }else if(this.state.flagType===1 ||this.state.flagType==='1'){\r\n          this.setState({dataGroupByDates : dataSentGroupByDates});\r\n          this.state.dataGroupByDates=dataSentGroupByDates;  \r\n        }else if(this.state.flagType===2 ||this.state.flagType==='2'){\r\n          this.setState({dataGroupByDates : dataFeelGroupByDates});\r\n          this.state.dataGroupByDates=dataFeelGroupByDates;  \r\n        }\r\n        \r\n        \r\n        \r\n        this.sendData()\r\n      }\r\n\r\n\r\n      resetFilter = () => {\r\n\r\n        this.state.data= this.state.oldData\r\n\r\n        if(this.state.fromDate!==null || this.state.toDate!==null ){\r\n          this.filterDataByDates()\r\n        }\r\n        \r\n        if(this.state.tags.length!==0){\r\n          this.filterByTags(this.state.tags)\r\n        }\r\n\r\n        if(this.state.hashtags.length!==0){\r\n          this.filterByHashtags(this.state.hashtags)\r\n        }\r\n\r\n        if(this.state.text.length!==0){\r\n          this.filterByText(this.state.text)\r\n        }\r\n\r\n        if(this.state.users.length!==0){\r\n          this.filterByUser(this.state.users)\r\n        }\r\n\r\n        this.handleQuery()\r\n\r\n      }\r\n\r\n    \r\n      sendData = () =>{\r\n        \r\n        this.props.parentCallback(this.state.dataGroupByDates,this.state.counter,this.state.flagType,this.state.feelCounter);\r\n      }\r\n      \r\n      \r\n\r\n    \r\n    render(){\r\n        return(            \r\n          <>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-4 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Algorithm</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-6 col-xl-6\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-2 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row stat-cards\">\r\n            <div className=\"col-md-3 col-xl-3\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Tags</h4><br />\r\n                      <SearchFilters parentCallback = {this.handleTags.bind(this)} db = {this.props.db} allTags = {this.props.tweetsData.dataTags}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n            <div className=\"col-md-3 col-xl-3\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Processed Text</h4><br />\r\n                      <SearchText parentCallback = {this.handleText.bind(this)} db = {this.props.db} allText = {this.props.tweetsData.dataText}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n            <div className=\"col-md-3 col-xl-3\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Hashtags</h4><br />\r\n                      <SearchHashtag parentCallback = {this.handleHashtags.bind(this)} db = {this.props.db} allHashtags = {this.props.tweetsData.dataHashtags}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-md-3 col-xl-3\">\r\n              <article className=\"stat-cards-item\">\r\n                <div className=\"row\">\r\n    \r\n                  <div className=\"col-md-12 col-xl-12\">\r\n                    <div className=\"stat-cards-info\">\r\n                      <center><h4>Username</h4><br />\r\n                      <SearchUser parentCallback = {this.handleUsers.bind(this)} db = {this.props.db} allUser = {this.props.tweetsData.users}/>\r\n                        \r\n                      </center>\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n              </article>\r\n            </div>\r\n    \r\n    \r\n          </div>\r\n          </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Filters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\EmotionBarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Charts\\RadarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchFilters.js",["394","395"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchFilters extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      tags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n    this.getTags();\r\n         \r\n  }\r\n\r\n  getTags = () =>{\r\n    \r\n\r\n    var i = 0;\r\n    var j = 0;\r\n    var k =0;\r\n    const data = this.props.allTags.data;\r\n    \r\n    var temp ;\r\n    var tempSuggestion = [];\r\n    var strings = [];\r\n\r\n\r\n    while(i<data.length){\r\n      j=0;\r\n      \r\n      if(data[i]._id!==undefined&&data[i]._id!==null){\r\n        \r\n        while(j<data[i]._id.tag_me.length){\r\n          \r\n          temp=data[i]._id.tag_me[j].split(\" : \")\r\n\r\n          if(strings.indexOf(temp[0])>-1){\r\n\r\n          }else{\r\n            tempSuggestion[k] = {\r\n              id:temp[1],\r\n              name: temp[0]\r\n            };\r\n            strings.push(temp[0])\r\n          }\r\n\r\n\r\n          k++;\r\n          j++;\r\n        }\r\n      }\r\n        i++;  \r\n    }\r\n    \r\n    \r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n\r\n    \r\n   \r\n     \r\n \r\n\r\n\r\nthis.reactTags = React.createRef()\r\n\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getTags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  \r\n\r\n  sendData = (tags) =>{\r\n    this.props.parentCallback(tags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const tags = this.state.tags.slice(0)\r\n    tags.splice(i, 1)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const tags = [].concat(this.state.tags, tag)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        ref={this.reactTags}\r\n        tags={this.state.tags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        allowNew={true}\r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchFilters","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchHashtag.js",["396","397","398"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\n\r\n\r\n\r\n\r\nclass SearchHashtag extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      hashtags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n     \r\n    this.getHashtags();\r\n  }\r\n\r\n  getHashtags = () => {\r\n    var i = 0;\r\n    var j = 0;\r\n    var k =0;\r\n    const data = this.props.allHashtags.data;\r\n    var strings = [];\r\n   \r\n    var tempSuggestion = []\r\n    //console.log(\"hashtags\"+data[0])\r\n    while(i<data.length){\r\n      \r\n      j=0\r\n      if(data[i]._id.hashtags!==undefined){\r\n        while(j<data[i]._id.hashtags.length){ \r\n          if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n            tempSuggestion.push(\r\n              {\r\n                id:0,\r\n                name: data[i]._id.hashtags[j]\r\n              }\r\n            )\r\n            strings.push(data[i]._id.hashtags[j]);\r\n          }    \r\n\r\n          //console.log(tempSuggestion)\r\n          j++\r\n        }\r\n      }\r\n\r\n\r\n        i++\r\n    }\r\n\r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n   \r\n\r\nthis.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getHashtags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  sendData = (hashtags) =>{\r\n    this.props.parentCallback(hashtags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const hashtags = this.state.hashtags.slice(0)\r\n    hashtags.splice(i, 1)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  onAddition (hashtag) {\r\n    const hashtags = [].concat(this.state.hashtags, hashtag)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Hashtag\"\r\n        ref={this.reactTags}\r\n        tags={this.state.hashtags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        allowNew={true}\r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchHashtag","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchText.js",["399","400","401","402","403"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchText extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      text: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n    this.getText();\r\n\r\n  }\r\n\r\n  getText = () => {\r\n    var i = 1;\r\n    var j = 0;\r\n    var temp;\r\n    var strings = [];\r\n    /*\r\n    const data = this.props.allText.data;\r\n    //var temp =data[0]._id.processed_text[0].split(\" \")\r\n    \r\n    var tempSuggestion = []\r\n \r\n    while(i<data.length){\r\n      j=0;\r\n      \r\n      if(data[i]._id!==undefined&&data[i]._id!==null){\r\n       \r\n      while(j<data[i]._id.processed_text.length){\r\n        \r\n        temp=data[i]._id.processed_text[j].split(\" \")\r\n\r\n        if(strings.indexOf(temp[0])==-1){\r\n          tempSuggestion.push({\r\n            id:0,\r\n            name: temp[0]      \r\n          });\r\n          strings.push(temp[0]);\r\n        }\r\n\r\n\r\n        j++;\r\n      }\r\n    }\r\n\r\n        i++;\r\n    }\r\n    \r\n   \r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})        \r\n           */\r\n\r\nthis.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getText();\r\n    }\r\n    \r\n  }\r\n\r\n  sendData = (text) =>{\r\n    this.props.parentCallback(text);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const text = this.state.text.slice(0)\r\n    text.splice(i, 1)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const text = [].concat(this.state.text, tag)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Text\"\r\n        ref={this.reactTags}\r\n        tags={this.state.text}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        allowNew={true}\r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchText","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\index.jsx",["404"],"import React, { useState } from \"react\";\r\n\r\nimport useTable from \"../../hooks/useTable.js\";\r\nimport \"./table.css\";\r\nimport TableFooter from \"./TableFooter\";\r\n\r\n\r\nconst printTags = (data) =>{\r\n  var i = 0\r\n  var temp \r\n   const tags = []\r\n  \r\n   if(data.tags!==undefined){\r\n    while(i<data.tags.tag_me.length){\r\n      temp = data.tags.tag_me[i].split(\" : \")\r\n      tags[i] = {\r\n        name : temp[0],\r\n        link : temp[3]\r\n      }\r\n      i++\r\n  }\r\n\r\n  return(\r\n    tags.map(item=>(<a href={item.link} target=\"_blank\" className=\"tag\">{item.name}</a>))\r\n   \r\n    )\r\n   }else{\r\n     return(\r\n       \"\"\r\n     )\r\n   }\r\n\r\n  \r\n}\r\n\r\nconst Table = ({ data, rowsPerPage }) => {\r\n  const [page, setPage] = useState(1);\r\n  const { slice, range } = useTable(data, page, rowsPerPage);\r\n  \r\n  return (\r\n    <>\r\n      <table className=\"table\" id=\"tabella\">\r\n        <thead className=\"tableRowHeader\">\r\n          <tr>\r\n            <th className=\"tableHeader\">Username</th>\r\n            <th className=\"tableHeader\">Text</th>\r\n            <th className=\"tableHeader\">Tags</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slice.map((data) => (\r\n            <tr className=\"tableRowItems\" >\r\n              <td className=\"tableCell\">{data.author_username}</td>\r\n              <td className=\"tableCell\">{data.raw_text}</td>\r\n              <td className=\"tableCell\">{printTags(data)} </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\hooks\\useTable.js",["405","406"],"import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default useTable;","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Table\\TableFooter\\index.jsx",[],"C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\components\\Filters\\SearchUser.js",["407","408"],"import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\n\r\n\r\n\r\n\r\nclass SearchUser extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n        users: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n     \r\n    this.getUser();\r\n  }\r\n\r\n  getUser = () => {\r\n    var i = 0;\r\n    \r\n    const data = this.props.allUser.data;\r\n    var strings = [];\r\n   \r\n    var tempSuggestion = []\r\n    //console.log(\"hashtags\"+data[0])\r\n    while(i<data.length){\r\n      \r\n\r\n   \r\n          if(strings.indexOf(data[i]._id)==-1){\r\n            tempSuggestion.push(\r\n              {\r\n                id:0,\r\n                name: data[i]._id\r\n              }\r\n            )\r\n            strings.push(data[i]._id);\r\n          }    \r\n     \r\n\r\n\r\n        i++\r\n    }\r\n    \r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n    \r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getHashtags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  sendData = (users) =>{\r\n    this.props.parentCallback(users);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const users = this.state.users.slice(0)\r\n    users.splice(i, 1)\r\n    this.setState({ users })\r\n    this.sendData(users)\r\n  }\r\n\r\n  onAddition (user) {\r\n    const users = [].concat(this.state.users, user)\r\n    this.setState({ users })\r\n    this.sendData(users)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Username\"\r\n        ref={this.reactTags}\r\n        tags={this.state.users}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        allowNew={true}\r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchUser","C:\\Users\\giovt\\Desktop\\crowdpulse old\\CrowdPulse\\frontend\\src\\HeatmapLayer.js",[],{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":70,"column":5,"nodeType":"415","messageId":"416","endLine":70,"endColumn":15},{"ruleId":"417","severity":1,"message":"418","line":180,"column":5,"nodeType":"419","messageId":"420","endLine":230,"endColumn":6},{"ruleId":"421","severity":1,"message":"422","line":220,"column":7,"nodeType":"423","messageId":"424","endLine":229,"endColumn":8},{"ruleId":"417","severity":1,"message":"418","line":242,"column":7,"nodeType":"419","messageId":"420","endLine":259,"endColumn":8},{"ruleId":"425","severity":1,"message":"426","line":3,"column":195,"nodeType":"427","messageId":"428","endLine":3,"endColumn":197},{"ruleId":"425","severity":1,"message":"426","line":3,"column":218,"nodeType":"427","messageId":"428","endLine":3,"endColumn":220},{"ruleId":"429","severity":1,"message":"430","line":111,"column":56,"nodeType":"431","messageId":"432","endLine":111,"endColumn":58},{"ruleId":"429","severity":1,"message":"430","line":237,"column":40,"nodeType":"431","messageId":"432","endLine":237,"endColumn":42},{"ruleId":"413","severity":1,"message":"414","line":39,"column":5,"nodeType":"415","messageId":"416","endLine":39,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":51,"column":9,"nodeType":"415","messageId":"416","endLine":51,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":56,"column":13,"nodeType":"415","messageId":"416","endLine":56,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":106,"column":9,"nodeType":"415","messageId":"416","endLine":106,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":108,"column":9,"nodeType":"415","messageId":"416","endLine":108,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":117,"column":7,"nodeType":"415","messageId":"416","endLine":117,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":122,"column":7,"nodeType":"415","messageId":"416","endLine":122,"endColumn":17},{"ruleId":"433","severity":1,"message":"434","line":25,"column":17,"nodeType":"435","endLine":25,"endColumn":75},{"ruleId":"409","replacedBy":"436"},{"ruleId":"411","replacedBy":"437"},{"ruleId":"438","severity":1,"message":"439","line":24,"column":25,"nodeType":"435","endLine":24,"endColumn":43},{"ruleId":"438","severity":1,"message":"439","line":33,"column":21,"nodeType":"435","endLine":33,"endColumn":41},{"ruleId":"438","severity":1,"message":"439","line":43,"column":21,"nodeType":"435","endLine":43,"endColumn":42},{"ruleId":"413","severity":1,"message":"414","line":28,"column":7,"nodeType":"415","messageId":"416","endLine":28,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":29,"column":7,"nodeType":"415","messageId":"416","endLine":29,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":33,"column":7,"nodeType":"415","messageId":"416","endLine":33,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":34,"column":7,"nodeType":"415","messageId":"416","endLine":34,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":72,"column":9,"nodeType":"415","messageId":"416","endLine":72,"endColumn":19},{"ruleId":"433","severity":1,"message":"434","line":27,"column":17,"nodeType":"435","endLine":27,"endColumn":80},{"ruleId":"440","severity":1,"message":"441","line":5,"column":8,"nodeType":"442","messageId":"443","endLine":5,"endColumn":17},{"ruleId":"440","severity":1,"message":"444","line":6,"column":8,"nodeType":"442","messageId":"443","endLine":6,"endColumn":9},{"ruleId":"413","severity":1,"message":"414","line":33,"column":5,"nodeType":"415","messageId":"416","endLine":33,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":34,"column":5,"nodeType":"415","messageId":"416","endLine":34,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":43,"column":5,"nodeType":"415","messageId":"416","endLine":43,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":107,"column":5,"nodeType":"415","messageId":"416","endLine":107,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":174,"column":5,"nodeType":"415","messageId":"416","endLine":174,"endColumn":15},{"ruleId":"440","severity":1,"message":"445","line":187,"column":13,"nodeType":"442","messageId":"443","endLine":187,"endColumn":14},{"ruleId":"413","severity":1,"message":"414","line":247,"column":9,"nodeType":"415","messageId":"416","endLine":247,"endColumn":19},{"ruleId":"440","severity":1,"message":"446","line":271,"column":13,"nodeType":"442","messageId":"443","endLine":271,"endColumn":14},{"ruleId":"413","severity":1,"message":"414","line":76,"column":9,"nodeType":"415","messageId":"416","endLine":76,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":77,"column":9,"nodeType":"415","messageId":"416","endLine":77,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":78,"column":9,"nodeType":"415","messageId":"416","endLine":78,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":79,"column":9,"nodeType":"415","messageId":"416","endLine":79,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":80,"column":9,"nodeType":"415","messageId":"416","endLine":80,"endColumn":19},{"ruleId":"438","severity":1,"message":"439","line":115,"column":21,"nodeType":"435","endLine":115,"endColumn":41},{"ruleId":"438","severity":1,"message":"439","line":125,"column":21,"nodeType":"435","endLine":125,"endColumn":42},{"ruleId":"413","severity":1,"message":"414","line":39,"column":7,"nodeType":"415","messageId":"416","endLine":39,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":42,"column":7,"nodeType":"415","messageId":"416","endLine":42,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":45,"column":7,"nodeType":"415","messageId":"416","endLine":45,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":48,"column":7,"nodeType":"415","messageId":"416","endLine":48,"endColumn":17},{"ruleId":"440","severity":1,"message":"447","line":5,"column":10,"nodeType":"442","messageId":"443","endLine":5,"endColumn":14},{"ruleId":"440","severity":1,"message":"448","line":5,"column":16,"nodeType":"442","messageId":"443","endLine":5,"endColumn":23},{"ruleId":"440","severity":1,"message":"449","line":7,"column":21,"nodeType":"442","messageId":"443","endLine":7,"endColumn":33},{"ruleId":"440","severity":1,"message":"447","line":42,"column":19,"nodeType":"442","messageId":"443","endLine":42,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":43,"column":13,"nodeType":"415","messageId":"416","endLine":43,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":44,"column":13,"nodeType":"415","messageId":"416","endLine":44,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":45,"column":13,"nodeType":"415","messageId":"416","endLine":45,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":54,"column":11,"nodeType":"415","messageId":"416","endLine":54,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":56,"column":13,"nodeType":"415","messageId":"416","endLine":56,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":70,"column":11,"nodeType":"415","messageId":"416","endLine":70,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":72,"column":13,"nodeType":"415","messageId":"416","endLine":72,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":113,"column":9,"nodeType":"415","messageId":"416","endLine":113,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":114,"column":9,"nodeType":"415","messageId":"416","endLine":114,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":135,"column":9,"nodeType":"415","messageId":"416","endLine":135,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":136,"column":9,"nodeType":"415","messageId":"416","endLine":136,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":159,"column":11,"nodeType":"415","messageId":"416","endLine":159,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":160,"column":11,"nodeType":"415","messageId":"416","endLine":160,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":173,"column":11,"nodeType":"415","messageId":"416","endLine":173,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":177,"column":11,"nodeType":"415","messageId":"416","endLine":177,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":200,"column":30,"nodeType":"452","messageId":"453","endLine":200,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":220,"column":9,"nodeType":"415","messageId":"416","endLine":220,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":221,"column":9,"nodeType":"415","messageId":"416","endLine":221,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":231,"column":5,"nodeType":"415","messageId":"416","endLine":231,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":235,"column":4,"nodeType":"415","messageId":"416","endLine":235,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":257,"column":30,"nodeType":"452","messageId":"453","endLine":257,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":278,"column":9,"nodeType":"415","messageId":"416","endLine":278,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":279,"column":9,"nodeType":"415","messageId":"416","endLine":279,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":288,"column":7,"nodeType":"415","messageId":"416","endLine":288,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":292,"column":7,"nodeType":"415","messageId":"416","endLine":292,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":333,"column":9,"nodeType":"415","messageId":"416","endLine":333,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":334,"column":9,"nodeType":"415","messageId":"416","endLine":334,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":342,"column":5,"nodeType":"415","messageId":"416","endLine":342,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":346,"column":5,"nodeType":"415","messageId":"416","endLine":346,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":379,"column":3,"nodeType":"415","messageId":"416","endLine":379,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":380,"column":3,"nodeType":"415","messageId":"416","endLine":380,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":387,"column":15,"nodeType":"415","messageId":"416","endLine":387,"endColumn":25},{"ruleId":"413","severity":1,"message":"414","line":418,"column":17,"nodeType":"415","messageId":"416","endLine":418,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":422,"column":17,"nodeType":"415","messageId":"416","endLine":422,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":437,"column":17,"nodeType":"415","messageId":"416","endLine":437,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":438,"column":17,"nodeType":"415","messageId":"416","endLine":438,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":444,"column":17,"nodeType":"415","messageId":"416","endLine":444,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":445,"column":17,"nodeType":"415","messageId":"416","endLine":445,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":449,"column":17,"nodeType":"415","messageId":"416","endLine":449,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":458,"column":17,"nodeType":"415","messageId":"416","endLine":458,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":459,"column":17,"nodeType":"415","messageId":"416","endLine":459,"endColumn":27},{"ruleId":"429","severity":1,"message":"430","line":462,"column":43,"nodeType":"431","messageId":"432","endLine":462,"endColumn":45},{"ruleId":"429","severity":1,"message":"430","line":462,"column":68,"nodeType":"431","messageId":"432","endLine":462,"endColumn":70},{"ruleId":"413","severity":1,"message":"414","line":464,"column":17,"nodeType":"415","messageId":"416","endLine":464,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":465,"column":17,"nodeType":"415","messageId":"416","endLine":465,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":469,"column":17,"nodeType":"415","messageId":"416","endLine":469,"endColumn":27},{"ruleId":"413","severity":1,"message":"414","line":705,"column":7,"nodeType":"415","messageId":"416","endLine":705,"endColumn":17},{"ruleId":"440","severity":1,"message":"454","line":5,"column":17,"nodeType":"442","messageId":"443","endLine":5,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":48,"column":11,"nodeType":"415","messageId":"416","endLine":48,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":49,"column":11,"nodeType":"415","messageId":"416","endLine":49,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":61,"column":11,"nodeType":"415","messageId":"416","endLine":61,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":63,"column":13,"nodeType":"415","messageId":"416","endLine":63,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":77,"column":11,"nodeType":"415","messageId":"416","endLine":77,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":79,"column":13,"nodeType":"415","messageId":"416","endLine":79,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":116,"column":9,"nodeType":"415","messageId":"416","endLine":116,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":137,"column":9,"nodeType":"415","messageId":"416","endLine":137,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":160,"column":10,"nodeType":"415","messageId":"416","endLine":160,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":175,"column":11,"nodeType":"415","messageId":"416","endLine":175,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":179,"column":11,"nodeType":"415","messageId":"416","endLine":179,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":202,"column":30,"nodeType":"452","messageId":"453","endLine":202,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":222,"column":9,"nodeType":"415","messageId":"416","endLine":222,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":223,"column":9,"nodeType":"415","messageId":"416","endLine":223,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":233,"column":5,"nodeType":"415","messageId":"416","endLine":233,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":237,"column":4,"nodeType":"415","messageId":"416","endLine":237,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":259,"column":30,"nodeType":"452","messageId":"453","endLine":259,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":279,"column":9,"nodeType":"415","messageId":"416","endLine":279,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":280,"column":9,"nodeType":"415","messageId":"416","endLine":280,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":289,"column":7,"nodeType":"415","messageId":"416","endLine":289,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":293,"column":7,"nodeType":"415","messageId":"416","endLine":293,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":335,"column":9,"nodeType":"415","messageId":"416","endLine":335,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":336,"column":9,"nodeType":"415","messageId":"416","endLine":336,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":344,"column":5,"nodeType":"415","messageId":"416","endLine":344,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":348,"column":5,"nodeType":"415","messageId":"416","endLine":348,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":381,"column":3,"nodeType":"415","messageId":"416","endLine":381,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":382,"column":3,"nodeType":"415","messageId":"416","endLine":382,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":391,"column":9,"nodeType":"415","messageId":"416","endLine":391,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":421,"column":11,"nodeType":"415","messageId":"416","endLine":421,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":422,"column":11,"nodeType":"415","messageId":"416","endLine":422,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":427,"column":11,"nodeType":"415","messageId":"416","endLine":427,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":428,"column":11,"nodeType":"415","messageId":"416","endLine":428,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":432,"column":11,"nodeType":"415","messageId":"416","endLine":432,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":441,"column":11,"nodeType":"415","messageId":"416","endLine":441,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":442,"column":11,"nodeType":"415","messageId":"416","endLine":442,"endColumn":21},{"ruleId":"429","severity":1,"message":"430","line":445,"column":37,"nodeType":"431","messageId":"432","endLine":445,"endColumn":39},{"ruleId":"429","severity":1,"message":"430","line":445,"column":62,"nodeType":"431","messageId":"432","endLine":445,"endColumn":64},{"ruleId":"413","severity":1,"message":"414","line":447,"column":11,"nodeType":"415","messageId":"416","endLine":447,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":448,"column":11,"nodeType":"415","messageId":"416","endLine":448,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":452,"column":11,"nodeType":"415","messageId":"416","endLine":452,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":688,"column":7,"nodeType":"415","messageId":"416","endLine":688,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":702,"column":11,"nodeType":"415","messageId":"416","endLine":702,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":707,"column":11,"nodeType":"415","messageId":"416","endLine":707,"endColumn":21},{"ruleId":"440","severity":1,"message":"454","line":5,"column":17,"nodeType":"442","messageId":"443","endLine":5,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":51,"column":11,"nodeType":"415","messageId":"416","endLine":51,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":52,"column":11,"nodeType":"415","messageId":"416","endLine":52,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":53,"column":11,"nodeType":"415","messageId":"416","endLine":53,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":66,"column":11,"nodeType":"415","messageId":"416","endLine":66,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":68,"column":13,"nodeType":"415","messageId":"416","endLine":68,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":82,"column":11,"nodeType":"415","messageId":"416","endLine":82,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":84,"column":13,"nodeType":"415","messageId":"416","endLine":84,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":121,"column":9,"nodeType":"415","messageId":"416","endLine":121,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":142,"column":9,"nodeType":"415","messageId":"416","endLine":142,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":165,"column":10,"nodeType":"415","messageId":"416","endLine":165,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":180,"column":11,"nodeType":"415","messageId":"416","endLine":180,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":184,"column":11,"nodeType":"415","messageId":"416","endLine":184,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":207,"column":30,"nodeType":"452","messageId":"453","endLine":207,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":227,"column":9,"nodeType":"415","messageId":"416","endLine":227,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":228,"column":9,"nodeType":"415","messageId":"416","endLine":228,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":238,"column":5,"nodeType":"415","messageId":"416","endLine":238,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":242,"column":4,"nodeType":"415","messageId":"416","endLine":242,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":264,"column":30,"nodeType":"452","messageId":"453","endLine":264,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":284,"column":9,"nodeType":"415","messageId":"416","endLine":284,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":285,"column":9,"nodeType":"415","messageId":"416","endLine":285,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":294,"column":7,"nodeType":"415","messageId":"416","endLine":294,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":298,"column":7,"nodeType":"415","messageId":"416","endLine":298,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":340,"column":9,"nodeType":"415","messageId":"416","endLine":340,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":341,"column":9,"nodeType":"415","messageId":"416","endLine":341,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":349,"column":5,"nodeType":"415","messageId":"416","endLine":349,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":353,"column":5,"nodeType":"415","messageId":"416","endLine":353,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":386,"column":3,"nodeType":"415","messageId":"416","endLine":386,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":387,"column":3,"nodeType":"415","messageId":"416","endLine":387,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":396,"column":9,"nodeType":"415","messageId":"416","endLine":396,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":425,"column":11,"nodeType":"415","messageId":"416","endLine":425,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":426,"column":11,"nodeType":"415","messageId":"416","endLine":426,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":431,"column":11,"nodeType":"415","messageId":"416","endLine":431,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":432,"column":11,"nodeType":"415","messageId":"416","endLine":432,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":436,"column":11,"nodeType":"415","messageId":"416","endLine":436,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":444,"column":9,"nodeType":"415","messageId":"416","endLine":444,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":445,"column":9,"nodeType":"415","messageId":"416","endLine":445,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":452,"column":11,"nodeType":"415","messageId":"416","endLine":452,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":453,"column":11,"nodeType":"415","messageId":"416","endLine":453,"endColumn":21},{"ruleId":"429","severity":1,"message":"430","line":456,"column":37,"nodeType":"431","messageId":"432","endLine":456,"endColumn":39},{"ruleId":"429","severity":1,"message":"430","line":456,"column":62,"nodeType":"431","messageId":"432","endLine":456,"endColumn":64},{"ruleId":"413","severity":1,"message":"414","line":458,"column":11,"nodeType":"415","messageId":"416","endLine":458,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":459,"column":11,"nodeType":"415","messageId":"416","endLine":459,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":463,"column":11,"nodeType":"415","messageId":"416","endLine":463,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":699,"column":7,"nodeType":"415","messageId":"416","endLine":699,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":713,"column":11,"nodeType":"415","messageId":"416","endLine":713,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":718,"column":11,"nodeType":"415","messageId":"416","endLine":718,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":730,"column":9,"nodeType":"415","messageId":"416","endLine":730,"endColumn":19},{"ruleId":"440","severity":1,"message":"455","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"440","severity":1,"message":"456","line":34,"column":9,"nodeType":"442","messageId":"443","endLine":34,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":52,"column":11,"nodeType":"415","messageId":"416","endLine":52,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":115,"column":11,"nodeType":"415","messageId":"416","endLine":115,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":117,"column":11,"nodeType":"415","messageId":"416","endLine":117,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":119,"column":11,"nodeType":"415","messageId":"416","endLine":119,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":121,"column":11,"nodeType":"415","messageId":"416","endLine":121,"endColumn":21},{"ruleId":"457","severity":1,"message":"458","line":137,"column":15,"nodeType":"442","messageId":"459","endLine":137,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":148,"column":19,"nodeType":"419","messageId":"420","endLine":158,"endColumn":20},{"ruleId":"417","severity":1,"message":"418","line":162,"column":19,"nodeType":"419","messageId":"420","endLine":172,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":191,"column":11,"nodeType":"415","messageId":"416","endLine":191,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":200,"column":11,"nodeType":"415","messageId":"416","endLine":200,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":202,"column":13,"nodeType":"415","messageId":"416","endLine":202,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":216,"column":11,"nodeType":"415","messageId":"416","endLine":216,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":218,"column":13,"nodeType":"415","messageId":"416","endLine":218,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":255,"column":9,"nodeType":"415","messageId":"416","endLine":255,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":276,"column":9,"nodeType":"415","messageId":"416","endLine":276,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":299,"column":10,"nodeType":"415","messageId":"416","endLine":299,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":312,"column":9,"nodeType":"415","messageId":"416","endLine":312,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":322,"column":11,"nodeType":"415","messageId":"416","endLine":322,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":326,"column":11,"nodeType":"415","messageId":"416","endLine":326,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":351,"column":30,"nodeType":"452","messageId":"453","endLine":351,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":371,"column":9,"nodeType":"415","messageId":"416","endLine":371,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":384,"column":5,"nodeType":"415","messageId":"416","endLine":384,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":388,"column":4,"nodeType":"415","messageId":"416","endLine":388,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":410,"column":24,"nodeType":"452","messageId":"453","endLine":410,"endColumn":53},{"ruleId":"413","severity":1,"message":"414","line":431,"column":3,"nodeType":"415","messageId":"416","endLine":431,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":432,"column":3,"nodeType":"415","messageId":"416","endLine":432,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":441,"column":5,"nodeType":"415","messageId":"416","endLine":441,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":445,"column":5,"nodeType":"415","messageId":"416","endLine":445,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":489,"column":3,"nodeType":"415","messageId":"416","endLine":489,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":490,"column":3,"nodeType":"415","messageId":"416","endLine":490,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":499,"column":5,"nodeType":"415","messageId":"416","endLine":499,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":503,"column":5,"nodeType":"415","messageId":"416","endLine":503,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":536,"column":3,"nodeType":"415","messageId":"416","endLine":536,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":537,"column":3,"nodeType":"415","messageId":"416","endLine":537,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":550,"column":5,"nodeType":"415","messageId":"416","endLine":550,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":551,"column":5,"nodeType":"415","messageId":"416","endLine":551,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":555,"column":5,"nodeType":"415","messageId":"416","endLine":555,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":679,"column":9,"nodeType":"415","messageId":"416","endLine":679,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":680,"column":9,"nodeType":"415","messageId":"416","endLine":680,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":724,"column":17,"nodeType":"419","messageId":"420","endLine":737,"endColumn":18},{"ruleId":"417","severity":1,"message":"418","line":741,"column":17,"nodeType":"419","messageId":"420","endLine":754,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":790,"column":11,"nodeType":"415","messageId":"416","endLine":790,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":793,"column":11,"nodeType":"415","messageId":"416","endLine":793,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":796,"column":11,"nodeType":"415","messageId":"416","endLine":796,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":807,"column":9,"nodeType":"415","messageId":"416","endLine":807,"endColumn":19},{"ruleId":"440","severity":1,"message":"460","line":4,"column":8,"nodeType":"442","messageId":"443","endLine":4,"endColumn":13},{"ruleId":"413","severity":1,"message":"414","line":65,"column":5,"nodeType":"415","messageId":"416","endLine":65,"endColumn":15},{"ruleId":"440","severity":1,"message":"445","line":26,"column":9,"nodeType":"442","messageId":"443","endLine":26,"endColumn":10},{"ruleId":"429","severity":1,"message":"430","line":37,"column":54,"nodeType":"431","messageId":"432","endLine":37,"endColumn":56},{"ruleId":"413","severity":1,"message":"414","line":56,"column":5,"nodeType":"415","messageId":"416","endLine":56,"endColumn":15},{"ruleId":"440","severity":1,"message":"460","line":4,"column":8,"nodeType":"442","messageId":"443","endLine":4,"endColumn":13},{"ruleId":"440","severity":1,"message":"446","line":25,"column":9,"nodeType":"442","messageId":"443","endLine":25,"endColumn":10},{"ruleId":"440","severity":1,"message":"461","line":26,"column":9,"nodeType":"442","messageId":"443","endLine":26,"endColumn":10},{"ruleId":"440","severity":1,"message":"462","line":27,"column":9,"nodeType":"442","messageId":"443","endLine":27,"endColumn":13},{"ruleId":"440","severity":1,"message":"463","line":28,"column":9,"nodeType":"442","messageId":"443","endLine":28,"endColumn":16},{"ruleId":"464","severity":1,"message":"465","line":24,"column":21,"nodeType":"435","messageId":"466","endLine":24,"endColumn":73,"fix":"467"},{"ruleId":"440","severity":1,"message":"446","line":6,"column":7,"nodeType":"442","messageId":"443","endLine":6,"endColumn":8},{"ruleId":"468","severity":1,"message":"469","line":27,"column":6,"nodeType":"470","endLine":27,"endColumn":43,"suggestions":"471"},{"ruleId":"429","severity":1,"message":"430","line":35,"column":42,"nodeType":"431","messageId":"432","endLine":35,"endColumn":44},{"ruleId":"413","severity":1,"message":"414","line":50,"column":5,"nodeType":"415","messageId":"416","endLine":50,"endColumn":15},"no-native-reassign",["472"],"no-negated-in-lhs",["473"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["472"],["473"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'stopWords' is defined but never used.","Identifier","unusedVar","'_' is defined but never used.","'k' is assigned a value but never used.","'i' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setcompleted' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'k'.","ArrowFunctionExpression","unsafeRefs","'useEffect' is defined but never used.","'useState' is defined but never used.","'option' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'axios' is defined but never used.","'j' is assigned a value but never used.","'temp' is defined but never used.","'strings' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"474","text":"475"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rowsPerPage'. Either include it or remove the dependency array.","ArrayExpression",["476"],"no-global-assign","no-unsafe-negation",[536,536]," rel=\"noreferrer\"",{"desc":"477","fix":"478"},"Update the dependencies array to be: [data, setTableRange, page, setSlice, rowsPerPage]",{"range":"479","text":"480"},[736,773],"[data, setTableRange, page, setSlice, rowsPerPage]"]