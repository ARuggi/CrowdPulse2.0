openapi: 3.0.3
info:
  title: CrowdPulse - OpenAPI 3.0
  description: "CrowdPulse API specifics"
  version: 1.0.0
servers:
  - url: http://localhost:4000
tags:
  - name: legacy
    description: Legacy endpoints for CrowdPulse 2.0
  - name: v1
    description: First release of endpoints for CrowdPulse 3.0

paths:

  # [LEGACY] GET - /tweet/setDbs
  /tweet/setDbs:
    get:
      tags: [legacy]
      summary: Sets the name of the database to be used for subsequent calls
      parameters:
        - name: mongodb
          in: query
          description: MongoDB database name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy_setDbs'
        '400':
          description: Invalid status value
  # [LEGACY] GET - /tweet/dbs
  /tweet/dbs:
    get:
      tags: [legacy]
      summary: Gets the databases specs
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy_dbs'
        '400':
          description: Invalid status value
  # TODO: [LEGACY] add missing endpoints...

  # [v1] GET - /v1/databases
  /v1/databases:
    get:
      tags: [v1]
      summary: Gets the database specifications. If the dbs array is empty, a full list of databases will be returned.
      parameters:
        - name: dbs
          in: query
          description: MongoDB database names
          required: false
          schema:
            type: array
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_dbs'
        '400':
          description: Invalid status value
  # [v1] GET - /v1/sentiment
  /v1/sentiment:
    get:
      tags: [v1]
      summary: Gets the sentiment values.
      parameters:
        - name: dbs
          in: query
          description: MongoDB database names
          required: true
          schema:
            type: array
        - name: algorithm
          in: query
          description: sent-it or feel-it
          required: true
          schema:
            type: string
        - name: dateFrom
          in: query
          description: ISO date like 2022-01-09T00:00:00.000Z (dateTo required)
          required: false
          schema:
            type: string
        - name: dateTo
          in: query
          description: ISO date like 2022-01-09T00:00:00.000Z (dateFrom required)
          required: false
          schema:
            type: string
        - name: tags
          in: query
          description: A list of tags
          required: false
          schema:
            type: array
        - name: processedText
          in: query
          description: A list processed words
          required: false
          schema:
            type: array
        - name: hashtags
          in: query
          description: A list of hashtags (# not required)
          required: false
          schema:
            type: array
        - name: usernames
          in: query
          description: A list of usernames
          required: false
          schema:
            type: array
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_sentiment'
        '400':
          description: missing query parameter
        '500':
          description: Executing error
  # [v1] GET - /v1/sentiment/timeline
  /v1/sentiment/timeline:
    get:
      tags: [v1]
      summary: Gets the sentiment timeline values.
      parameters:
        - name: dbs
          in: query
          description: MongoDB database names
          required: true
          schema:
            type: array
        - name: algorithm
          in: query
          description: sent-it or feel-it
          required: true
          schema:
            type: string
        - name: dateFrom
          in: query
          description: ISO date like 2022-01-09T00:00:00.000Z (dateTo required)
          required: false
          schema:
            type: string
        - name: dateTo
          in: query
          description: ISO date like 2022-01-09T00:00:00.000Z (dateFrom required)
          required: false
          schema:
            type: string
        - name: tags
          in: query
          description: A list of tags
          required: false
          schema:
            type: array
        - name: processedText
          in: query
          description: A list processed words
          required: false
          schema:
            type: array
        - name: hashtags
          in: query
          description: A list of hashtags (# not required)
          required: false
          schema:
            type: array
        - name: usernames
          in: query
          description: A list of usernames
          required: false
          schema:
            type: array
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_sentiment_timeline'
        '400':
          description: missing query parameter
        '500':
          description: Executing error
  # [v1] GET - /v1/word
  /v1/word:
    get:
      tags: [v1]
      summary: Get a list of words and their number.
      parameters:
        - name: dbs
          in: query
          description: MongoDB database names
          required: true
          schema:
            type: array
        - name: algorithm
          in: query
          description: all, sent-it or feel-it
          required: false
          schema:
            type: string
        - name: sentiment
          in: query
          description: all, positive, neutral or negative
          required: false
          schema:
            type: string
        - name: emotion
          in: query
          description: (only if algorithm = 'feel-it'), all, joy, sadness anger or fear
          required: false
          schema:
            type: string
        - name: dateFrom
          in: query
          description: ISO date like 2022-01-09T00:00:00.000Z (dateTo required)
          required: false
          schema:
            type: string
        - name: dateTo
          in: query
          description: ISO date like 2022-01-09T00:00:00.000Z (dateFrom required)
          required: false
          schema:
            type: string
        - name: tags
          in: query
          description: A list of tags
          required: false
          schema:
            type: array
        - name: processedText
          in: query
          description: A list processed words
          required: false
          schema:
            type: array
        - name: hashtags
          in: query
          description: A list of hashtags (# not required)
          required: false
          schema:
            type: array
        - name: usernames
          in: query
          description: A list of usernames
          required: false
          schema:
            type: array
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_word'
        '400':
          description: missing query parameter
        '500':
          description: Executing error
components:
  schemas:
    # [LEGACY]
    legacy_setDbs:
      type: object
      properties:
        selected:
          type: string
          example: database_name
    legacy_dbs:
      type: object
      properties:
        databases:
          type: array
          items:
            example: [{
              name: string,
              sizeOnDisk: number,
              empty: boolean
            }]
    # [V1]
    v1_dbs:
      type: object
      properties:
        databases:
          type: array
          items:
            example: [
              {
                name: string,
                sizeOnDisk: number,
                empty: boolean
              }
            ]
    v1_sentiment:
      type: object
      properties:
        algorithm:
          type: string
        processed:
          type: number
        notProcessed:
          type: number
        sentimentData:
          type: object
          example: {
            "positive": number,
            "neutral": number,
            "negative": number
          }
        emotionData:
          type: object
          example: {
            "joy": number,
            "sadness": number,
            "anger": number,
            "fear": number
          }
    v1_sentiment_timeline:
      type: array
      example: [
        {
          "positiveCount": number,
          "neutralCount": number,
          "negativeCount": number,
          "date": '2023-02-21'
        }
      ]
    v1_word:
      type: array
      example: [
        {
          "word": string,
          "count": number
        }
      ]